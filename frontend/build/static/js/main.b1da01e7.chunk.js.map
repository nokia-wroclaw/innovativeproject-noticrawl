{"version":3,"sources":["media/logo.png","media/404-cat.png","components/LoginRegisterPage/Login.js","components/LoginRegisterPage/Register.js","components/LoginRegisterPage/LoginRegisterContent.js","components/Header.js","components/Footer.js","components/LoginRegisterPage/LoginRegister.js","components/ContentPages/NewCrawlPage/NewCrawlContent.js","components/ContentPages/NewCrawlPage/AddingScripts.js","components/ContentPages/NewCrawlPage/NewCrawlNavbar.js","components/ContentPages/NewCrawlPage/NewCrawl.js","components/ContentPages/MyAccountPage/MyAccountNavbar.js","components/ContentPages/MyAccountPage/MyAccountContent.js","components/ContentPages/MyAccountPage/MyAccount.js","components/ContentPages/MyCrawlsPage/MyCrawlsNavbar.js","components/ContentPages/MyCrawlsPage/MyCrawlsContent.js","components/ContentPages/MyCrawlsPage/MyCrawls.js","components/ContentPages/CrawlingPage/ExternalHtml.js","components/ContentPages/CrawlingPage/TopBanner.js","components/ContentPages/CrawlingPage/RenderBanner.js","components/ContentPages/CrawlingPage/Crawling.js","components/ContentPages/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LoginBox","props","state","e","className","htmlFor","type","name","placeholder","to","onClick","this","submitLogin","bind","React","Component","MyTextInput","label","useField","field","meta","id","touched","error","MyCheckbox","children","RegisterBox","username","password","email","acceptedTerms","errors","initialValues","confirmPassword","validationSchema","Yup","max","required","min","oneOf","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","LoginRegisterContent","isLoginOpen","isRegisterOpen","setState","showLoginBox","showRegisterBox","Login","Register","Header","src","logo","alt","Footer","LoginRegister","NewCrawlContent","submitForm","a","preventDefault","console","log","isSubmitting","url","link","toString","fetch","method","body","headers","res","json","data","hasOwnProperty","message","isError","success","parsedPage","html","parsedPageToExport","document","getElementById","click","handleInputChange","target","value","FormControl","style","width","variant","pattern","hidden","OutlinedInput","onChange","marginBottom","FormHelperText","marginLeft","Button","color","pathname","externalPageToRender","colors","ExampleMenu","activeItem","window","location","assign","Menu","widths","size","Item","active","moveToNewCrawl","moveToMyCrawls","moveToMyAccount","Logout","MenuExampleColoredMenus","menus","map","key","NewCrawl","MyAccountContent","MyAccount","MyCrawlsContent","MyCrawls","ExternalHtml","takeExternalPageToRender","useLocation","title","srcDoc","allow","importance","referrerPolicy","sandbox","frameBorder","TopBanner","sendState","borderState","Callback","x","xpathFromParent","xpath","sleep","period","ms","Promise","resolve","height","defaultChecked","paddingTop","TextField","InputLabel","Select","labelId","MenuItem","startIcon","RenderBanner","takeUrl","Crawling","callbackFunction","borderSwitchState","contentWindow","TurnOffBordering","UpdateBorders","xpathIframe","TakeXpath","MyCrawlsMainContent","forceRefresh","App","exact","strict","path","component","NotFoundPage","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b1da01e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fe41c8fe.png\";","module.exports = __webpack_public_path__ + \"static/media/404-cat.3eba6875.png\";","import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass LoginBox extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {};\r\n    }\r\n  \r\n    submitLogin(e) {}\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"inner-container\">\r\n          <div className=\"box\">\r\n  \r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                className=\"login-input\"\r\n                placeholder=\"Username\"/>\r\n            </div>\r\n  \r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className=\"login-input\"\r\n                placeholder=\"Password\"/>\r\n            </div>\r\n   \r\n                <Link to=\"/new-crawl\"> \r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"login-btn\"\r\n                    onClick={this\r\n                    .submitLogin\r\n                    .bind(this)}>Login</button>\r\n                </Link>\r\n\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  } \r\n\r\n  export default LoginBox\r\n ","import React from \"react\"\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst MyCheckbox = ({ children, ...props }) => {\r\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\r\n  return (\r\n    <>\r\n      <label className=\"checkbox\">\r\n        <input {...field} {...props} type=\"checkbox\" />\r\n        {children}\r\n      </label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst MySelect = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <div htmlFor={props.id || props.name}>{label}</div>\r\n      <div {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div>{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nclass RegisterBox extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"ss\",\r\n      email: \"\",\r\n      acceptedTerms: false,\r\n      errors: {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n      }\r\n      \r\n    };\r\n    \r\n  }\r\n  \r\n  render() {\r\n    const {errors} = this.state;\r\n    return (\r\n        <div className=\"inner-container\">\r\n          \r\n          <div className=\"box\">\r\n\r\n          <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n          acceptedTerms: false, // added for our checkbox\r\n        }}\r\n        validationSchema={Yup.object({\r\n          password: Yup.string()\r\n            .max(30, \"Must be 30 characters or less\")\r\n            .required(\"Password required\")\r\n            .min(8, \"Minimum length 8\"),\r\n            confirmPassword: Yup.string()\r\n            .required(\"Password required\")\r\n            .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n          email: Yup.string()\r\n            .email(\"Invalid email address\")\r\n            .required(\"Email required\"),\r\n          acceptedTerms: Yup.boolean()\r\n            .required(\"Required\")\r\n            .oneOf([true], \"You must accept the terms and conditions\"),\r\n        })}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n          }, 400);\r\n        }}\r\n      >\r\n        <div className=\"scroll\">\r\n        <Form>\r\n        <div className=\"input-group\">\r\n        <MyTextInput\r\n            label=\"Email Address\"\r\n            type='email' \r\n            name='email' \r\n            className=\"login-input\" \r\n            placeholder=\"Email\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Password\"\r\n            type='password' \r\n            name='password' \r\n            className=\"login-input\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Confirm password\"\r\n            type='password' \r\n            name='confirmPassword' \r\n            className=\"login-input\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <MyCheckbox name=\"acceptedTerms\">\r\n            I accept the terms and conditions\r\n          </MyCheckbox>\r\n\r\n          <button className=\"login-btn\" type=\"submit\">Submit</button>\r\n          </div>\r\n        </Form>\r\n        </div>\r\n      </Formik>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default RegisterBox","import React from \"react\"\r\nimport Login from \"./Login\"\r\nimport Register from \"./Register\"\r\n\r\nclass LoginRegisterContent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isLoginOpen: true,\r\n          isRegisterOpen: false\r\n        };\r\n    }\r\n\r\n     showLoginBox() {\r\n        this.setState({isLoginOpen: true, isRegisterOpen: false});\r\n        }\r\n        \r\n     showRegisterBox() {\r\n        this.setState({isRegisterOpen: true, isLoginOpen: false});\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <div className=\"root-container\">\r\n                  <div className=\"box-controller\">\r\n                      <div\r\n                          className={\"controller \" + (this.state.isLoginOpen\r\n                          ? \"selected-controller\"\r\n                          : \"\")}\r\n                          onClick={this\r\n                          .showLoginBox\r\n                          .bind(this)}>\r\n                          Login\r\n                      </div>\r\n                      <div\r\n                          className={\"controller \" + (this.state.isRegisterOpen\r\n                          ? \"selected-controller\"\r\n                          : \"\")}\r\n                          onClick={this\r\n                          .showRegisterBox\r\n                          .bind(this)}>\r\n                          Register\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"box-container\">\r\n                  {this.state.isLoginOpen && <Login />}\r\n                  {this.state.isRegisterOpen && <Register />}\r\n                  </div>\r\n              </div>\r\n            );\r\n        }\r\n      \r\n}\r\n\r\nexport default LoginRegisterContent  ","import React from \"react\"\r\n\r\nimport logo from '../media/logo.png';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"AppHeader\">\r\n            <img src={logo} className=\"AppLogo\" alt=\"logo\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"Footer\">\r\n            <text className=\"Footer-text\">\r\n                Innovative Projects Summer - Wrocław 2020\r\n            </text>      \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\"\r\nimport LoginRegisterContent from \"./LoginRegisterContent\"\r\nimport Header from '../Header'\r\nimport Footer from '../Footer'\r\n\r\nfunction LoginRegister() {\r\n    return (\r\n        <div>\r\n            <center>\r\n            <div className='background'>\r\n                <Header />\r\n                    <main className=\"MainContent\">\r\n                        <LoginRegisterContent />\r\n                    </main>\r\n                <Footer />\r\n            </div>\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginRegister","import React, {Component} from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport { AddingScripts } from \"./AddingScripts.js\"\r\n\r\nclass NewCrawlContent extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      values: {\r\n        link: \"\",\r\n      },\r\n      parsedPageToExport: \"\",\r\n      isSubmitting: false,\r\n      isError: false\r\n    };\r\n  }\r\n\r\nsubmitForm = async e => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.setState({ isSubmitting: true });\r\n\r\n    //communication with backend\r\n    const url = {\r\n      url: this.state.values.link.toString()\r\n    };\r\n    const res = await fetch(\"/api/v1/page\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(url),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n    });\r\n\r\n    this.setState({ isSubmitting: false });\r\n    let data = await res.json();\r\n    !data.hasOwnProperty(\"error\")\r\n      ? this.setState({ message: data.success })\r\n      : this.setState({ message: data.error, isError: true });\r\n    data = {\r\n      parsedPage: data.html\r\n    };\r\n\r\n    data.parsedPage = data.parsedPage + AddingScripts \r\n\r\n//setting parsed code received from backend to the variable, which will be exported\r\nthis.setState({parsedPageToExport: data.parsedPage}) \r\n\r\n    \r\n    setTimeout(\r\n      () => {\r\n        this.setState({\r\n          isError: false,\r\n          message: \"\",\r\n        })\r\n        document.getElementById(\"sendCrawlData\").click()\r\n      },\r\n      500\r\n    );\r\n\r\n\r\n  };\r\n\r\n  handleInputChange = e =>\r\n    this.setState({\r\n      values: { ...this.state.values, [e.target.name]: e.target.value }\r\n    });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <div className=\"PageContent\">\r\n        <form onSubmit={this.submitForm}>\r\n            <h1>Paste your link below</h1>\r\n            <FormControl style={{ width: '40ch'}} variant=\"outlined\">\r\n              <input value={this.state.values.link} pattern=\"https?://.+\" hidden=\"true\"></input>\r\n              <OutlinedInput\r\n                type=\"text\"\r\n                name=\"link\"\r\n                id=\"linkInput\"\r\n                value={this.state.values.link}\r\n                onChange={this.handleInputChange}\r\n                style={{ marginBottom: '0px' }}  \r\n                required\r\n              />\r\n                <FormHelperText style={{ marginLeft: \"-25px\", width: '500px'}} id=\"helper-text\">\r\n                    Remember, that your link should start with \"http://\" or \"https://\".\r\n                </FormHelperText> \r\n\r\n            </FormControl>\r\n\r\n            <div>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" id=\"linkSubmit\">Go to website</Button>\r\n            </div> \r\n      \r\n        </form>\r\n\r\n        <div className={`message ${this.state.isError && \"error\"}`}>\r\n          {this.state.isSubmitting ? \"Please wait...\" : this.state.message}\r\n        </div>\r\n\r\n        <Link to={{\r\n          pathname: \"/new-crawl/start-crawling\",\r\n          state: {\r\n            externalPageToRender: this.state.parsedPageToExport,\r\n            url: this.state.values.link\r\n          }\r\n        }}>\r\n          <button id=\"sendCrawlData\" hidden=\"true\"/>\r\n        </Link>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\nexport default NewCrawlContent\r\n","const AddingScripts = `\r\n<script type='text/javascript'>\r\n\r\nwindow.onload=function() {\r\n  var anchors = document.getElementsByTagName('a');\r\n  for(var i=anchors.length-1;i>=0;i--){\r\n  anchors[i].onclick=function() { return false }\r\n  }}\r\n\r\n  \r\nvar outer = document.createElement(\"div\");\r\nouter.setAttribute(\"id\", \"outer\");\r\nouter.setAttribute(\"class\", \"outer\");\r\ndocument.body.appendChild(outer);\r\nouter.style.background = 'rgba(37, 172, 131, 0.2)';\r\nouter.style.position = 'absolute';\r\nouter.style.zIndex = 65000000;\r\n\r\n\r\nvar selector = document.createElement(\"div\");\r\nselector.setAttribute(\"id\", \"selector\");\r\ndocument.body.appendChild(selector);\r\nselector.style.borderStyle  = \"solid\";\r\nselector.style.borderWidth  = \"3px\";\r\nselector.style.borderColor  = \"blue\";\r\nselector.style.position = 'absolute';\r\nselector.style.zIndex = 65000000;\r\nselector.style.pointerEvents = \"none\";\r\nselector.style.transition = 'all 300ms ease';\r\n\r\n\r\nvar TurnOffBordering = 1;\r\n\r\nvar xpathIframe = 5;\r\n\r\nfunction drawBorder(e) {\r\n\r\n  if (TurnOffBordering == 0) {\r\n    return;\r\n  }\r\n\r\n\r\n  var target = e.target;\r\n\r\n  if (target.id === \"selector\" ) return;\r\n\r\n      selector.style.display = 'block';\r\n\r\n  var targetRect = target.getBoundingClientRect();\r\n\r\n  selector.style.display = \"block\";\r\n  selector.style.width = targetRect.width + \"px\";\r\n  selector.style.height = targetRect.height + \"px\";\r\n  selector.style.left = targetRect.left + \"px\";\r\n  selector.style.top = targetRect.top + window.scrollY + \"px\";\r\n}\r\n\r\nfunction UpdateBorders() {\r\n  selector.style.display = 'none';\r\n  outer.style.display = \"none\";\r\n}\r\n\r\nfunction removeHighlight(e) {\r\n  var target = e.target;\r\n  if (target && target.className === \"outer\") {\r\n    outer.style.display = \"none\";\r\n  }\r\n}\r\n\r\nfunction select(e) {\r\n  \r\n\r\n  if (TurnOffBordering == 0) {\r\n    return;\r\n  }\r\n\r\n  var target = e.target;\r\n\r\n  if (target.id == \"outer\" || \r\n  target.id == \"selector\") return;\r\n\r\n\r\n  getElementXPath(e);\r\n\r\n  var targetRect = target.getBoundingClientRect();\r\n\r\n  outer.style.display = \"block\";\r\n  outer.style.width = targetRect.width + \"px\";\r\n  outer.style.height = targetRect.height + \"px\";\r\n  outer.style.left = targetRect.left + \"px\";\r\n  outer.style.top = targetRect.top + window.scrollY + \"px\";\r\n\r\n  console.log(\"xpath: \"+ xpathIframe)\r\n}\r\n\r\nfunction getElementTreeXPath(element) {\r\n  var paths = [];\r\n  var target = element.target;\r\n\r\n  for (; target && target.nodeType === 1; target = target.parentNode) {\r\n    var index = 0;\r\n    // EXTRA TEST FOR target.ID\r\n    if (target && target.id) {\r\n      paths.splice(0, 0, '/*[@id=\"' + target.id + '\"]');\r\n      break;\r\n    }\r\n\r\n    for (var sibling = target.previousSibling; sibling; sibling = sibling.previousSibling) {\r\n      // Ignore document type declaration.\r\n      if (sibling.nodeType === Node.DOCUMENT_TYPE_NODE)\r\n        continue;\r\n\r\n      if (sibling.nodeName === target.nodeName)\r\n        ++index;\r\n\r\n    }\r\n\r\n    var tagName = target.nodeName.toLowerCase();\r\n    var pathIndex = (index ? \"[\" + (index + 1) + \"]\" : \"\");\r\n    paths.splice(0, 0, tagName + pathIndex);\r\n  }\r\n\r\n  xpathIframe = paths.length ? \"/\" + paths.join(\"/\") : null;\r\n  return paths.length ? \"/\" + paths.join(\"/\") : null;\r\n};\r\n\r\nfunction getElementXPath(element) {\r\n  var target = element.target;\r\n\r\n  if (target && target.id){\r\n    xpathIframe = '//*[@id=\"' + target.id + '\"]'\r\n    return '//*[@id=\"' + target.id + '\"]';\r\n  }\r\n  else\r\n    return getElementTreeXPath(element);\r\n};\r\n\r\n\r\n  window.addEventListener('click', removeHighlight);\r\n  window.addEventListener('mousemove', drawBorder);\r\n  window.addEventListener('click', select);\r\n\r\n\r\n</script>`\r\n\r\nexport { AddingScripts };","import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\nimport \"../../../css/navbar.css\"\r\n\r\nconst colors = [\r\n  'blue',\r\n]\r\nclass ExampleMenu extends Component {\r\n  static propTypes = {\r\n    color: PropTypes.string,\r\n  }\r\n\r\n  state = { activeItem: 'New Crawl' }\r\n\r\n  moveToMyAccount() {\r\n    window.location.assign(\"./my-account\")\r\n  }\r\n  moveToNewCrawl() {\r\n    window.location.assign(\"./new-crawl\")\r\n  }\r\n  moveToMyCrawls() {\r\n    window.location.assign(\"./my-crawls\")\r\n  }\r\n  Logout() {\r\n    window.location.assign(\"./\")\r\n  }\r\n\r\n  render() {\r\n    const { color } = this.props\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <div className=\"navbar\">\r\n      <Menu color={color} widths={4} size=\"small\">\r\n        <Menu.Item\r\n          name='New Crawl'\r\n          active={activeItem === 'New Crawl'}\r\n          onClick={this.moveToNewCrawl}\r\n        />\r\n        <Menu.Item\r\n          name='My Crawls'\r\n          active={activeItem === 'My Crawls'}\r\n          onClick={this.moveToMyCrawls}\r\n        />\r\n        <Menu.Item\r\n          name='My Account'\r\n          active={activeItem === 'My Account'}\r\n          onClick={this.moveToMyAccount}\r\n        />\r\n        <Menu.Item\r\n          name='Logout'\r\n          active={activeItem === 'Logout'}\r\n          onClick={this.Logout}\r\n        />\r\n      </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst MenuExampleColoredMenus = () => {\r\n  const menus = colors.map((color) => <ExampleMenu color={color} key={color} />)\r\n\r\n  return <div>{menus}</div>\r\n}\r\n\r\nexport default MenuExampleColoredMenus\r\n","import React from \"react\"\r\nimport NewCrawlContent from './NewCrawlContent'\r\nimport Navbar from './NewCrawlNavbar'\r\nimport Header from '../../Header'\r\nimport Footer from '../../Footer'\r\n\r\nfunction NewCrawl() {\r\n    return (\r\n        <div>\r\n            <center>\r\n            <div className='background'>\r\n                <Header />\r\n                    <main className=\"MainContent\">\r\n                    <NewCrawlContent />\r\n                    <Navbar />\r\n                    </main>\r\n                <Footer />\r\n            </div>\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewCrawl","import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\nimport \"../../../css/navbar.css\"\r\n\r\nconst colors = [\r\n  'blue',\r\n]\r\nclass ExampleMenu extends Component {\r\n  static propTypes = {\r\n    color: PropTypes.string,\r\n  }\r\n\r\n  state = { activeItem: 'My Account' }\r\n\r\n  moveToMyAccount() {\r\n    window.location.assign(\"./my-account\")\r\n  }\r\n  moveToNewCrawl() {\r\n    window.location.assign(\"./new-crawl\")\r\n  }\r\n  moveToMyCrawls() {\r\n    window.location.assign(\"./my-crawls\")\r\n  }\r\n  Logout() {\r\n    window.location.assign(\"./\")\r\n  }\r\n\r\n  render() {\r\n    const { color } = this.props\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <div className=\"navbar\">\r\n      <Menu color={color} widths={4} size=\"small\">\r\n        <Menu.Item\r\n          name='New Crawl'\r\n          active={activeItem === 'New Crawl'}\r\n          onClick={this.moveToNewCrawl}\r\n        />\r\n        <Menu.Item\r\n          name='My Crawls'\r\n          active={activeItem === 'My Crawls'}\r\n          onClick={this.moveToMyCrawls}\r\n        />\r\n        <Menu.Item\r\n          name='My Account'\r\n          active={activeItem === 'My Account'}\r\n          onClick={this.moveToMyAccount}\r\n        />\r\n        <Menu.Item\r\n          name='Logout'\r\n          active={activeItem === 'Logout'}\r\n          onClick={this.Logout}\r\n        />\r\n      </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst MenuExampleColoredMenus = () => {\r\n  const menus = colors.map((color) => <ExampleMenu color={color} key={color} />)\r\n\r\n  return <div>{menus}</div>\r\n}\r\n\r\nexport default MenuExampleColoredMenus\r\n","import React from \"react\"\r\n\r\nfunction MyAccountContent() {\r\n    return (\r\n        <div className=\"PageContent\">\r\n            \r\n        </div>\r\n)\r\n}\r\n\r\nexport default MyAccountContent","import React from \"react\"\r\nimport Navbar from './MyAccountNavbar.js'\r\nimport Header from '../../Header'\r\nimport Footer from '../../Footer'\r\nimport MyAccountContent from \"./MyAccountContent.js\"\r\n\r\nfunction MyAccount() {\r\n    return (\r\n        <div>\r\n        <center>\r\n        <div className='background'>\r\n            <Header />\r\n                <main className=\"MainContent\">\r\n                    <MyAccountContent />\r\n                    <Navbar />\r\n                </main>\r\n            <Footer />\r\n        </div>\r\n        </center>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default MyAccount","import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\nimport \"../../../css/navbar.css\"\r\n\r\nconst colors = [\r\n  'blue',\r\n]\r\nclass ExampleMenu extends Component {\r\n  static propTypes = {\r\n    color: PropTypes.string,\r\n  }\r\n\r\n  state = { activeItem: 'My Crawls' }\r\n\r\n  moveToMyAccount() {\r\n    window.location.assign(\"./my-account\")\r\n  }\r\n  moveToNewCrawl() {\r\n    window.location.assign(\"./new-crawl\")\r\n  }\r\n  moveToMyCrawls() {\r\n    window.location.assign(\"./my-crawls\")\r\n  }\r\n  Logout() {\r\n    window.location.assign(\"./\")\r\n  }\r\n\r\n  render() {\r\n    const { color } = this.props\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <div className=\"navbar\">\r\n      <Menu color={color} widths={4} size=\"small\">\r\n        <Menu.Item\r\n          name='New Crawl'\r\n          active={activeItem === 'New Crawl'}\r\n          onClick={this.moveToNewCrawl}\r\n        />\r\n        <Menu.Item\r\n          name='My Crawls'\r\n          active={activeItem === 'My Crawls'}\r\n          onClick={this.moveToMyCrawls}\r\n        />\r\n        <Menu.Item\r\n          name='My Account'\r\n          active={activeItem === 'My Account'}\r\n          onClick={this.moveToMyAccount}\r\n        />\r\n        <Menu.Item\r\n          name='Logout'\r\n          active={activeItem === 'Logout'}\r\n          onClick={this.Logout}\r\n        />\r\n      </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst MenuExampleColoredMenus = () => {\r\n  const menus = colors.map((color) => <ExampleMenu color={color} key={color} />)\r\n\r\n  return <div>{menus}</div>\r\n}\r\n\r\nexport default MenuExampleColoredMenus","import React from \"react\"\r\n\r\nfunction MyCrawlsContent() {\r\n    return (\r\n        <div className=\"PageContent\">\r\n            \r\n        </div>\r\n)\r\n}\r\n\r\nexport default MyCrawlsContent","import React from \"react\"\r\nimport Navbar from './MyCrawlsNavbar.js'\r\nimport Header from '../../Header'\r\nimport Footer from '../../Footer'\r\nimport MyCrawlsContent from \"./MyCrawlsContent.js\"\r\n\r\nfunction MyCrawls() {\r\n    return (\r\n        <div>\r\n        <center>\r\n        <div className='background'>\r\n            <Header />\r\n                <main className=\"MainContent\">\r\n                    <MyCrawlsContent />\r\n                    <Navbar />\r\n                </main>\r\n            <Footer />\r\n        </div>\r\n        </center>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default MyCrawls","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n//rendering external html\r\nfunction ExternalHtml() {\r\n\r\n  const takeExternalPageToRender =  useLocation();\r\n\r\n    return (\r\n      <div>\r\n        <iframe\r\n          title=\"pageFrame\"\r\n          id=\"pageFrame\"\r\n          name=\"pageFrame\"\r\n          src={takeExternalPageToRender.state.externalPageToRender}\r\n          srcDoc={takeExternalPageToRender.state.externalPageToRender}\r\n          allow=\"fullscreen\"\r\n          importance=\"high\"\r\n          referrerPolicy=\"unsafe-url\"\r\n          sandbox=\"allow-popups allow-scripts allow-same-origin\"\r\n          frameBorder=\"100\"\r\n        />\r\n  \r\n        {/* old way\r\n        <div dangerouslySetInnerHTML={{ __html: takeExternalPageToRender.state.externalPageToRender }} /> \r\n        */}\r\n  \r\n      </div>\r\n    );\r\n}\r\nexport default ExternalHtml;","import React from 'react';\r\nimport logo from '../../../media/logo.png'\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nclass TopBanner extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      values: {\r\n        email: \"\",\r\n        period: \"\",\r\n        xpath: \"\",\r\n        value: \"not supported\",\r\n        url: this.props.url\r\n      },\r\n      isSubmitting: false,\r\n      isError: false\r\n    };\r\n  }\r\n\r\n  sendState = () => {\r\n    if (this.props.borderState)\r\n    this.props.Callback(0);\r\n    else \r\n    this.props.Callback(1);\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      values: { ...this.state.values, [e.target.name]: e.target.value }\r\n    });\r\n  }\r\n\r\n  sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  submitForm = async e => {\r\n    e.preventDefault();\r\n\r\n    //setting xpath\r\n    var x = this.props.xpathFromParent();\r\n    console.log(\"Wysyłany xpath: \"+ x);\r\n    this.setState({\r\n      values: { ...this.state.values, xpath: x }\r\n    })\r\n\r\n    this.setState({ isSubmitting: true });\r\n\r\n    await this.sleep(2000);\r\n\r\n    ///////////// what will be send to backend\r\n    console.log(JSON.stringify(this.state.values))\r\n    /////////////\r\n\r\n    //start communication with backend\r\n    const res = await fetch(\"/api/v1/crawling-data\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(this.state.values),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n    });\r\n\r\n    ////////////// what has been sent to backend \r\n    console.log(JSON.stringify(this.state.values))\r\n    //////////////\r\n\r\n    this.setState({ isSubmitting: false });\r\n\r\n    const data = await res.json();\r\n    !data.hasOwnProperty(\"error\")\r\n      ? this.setState({ message: data.success })\r\n      : this.setState({ message: data.error, isError: true });\r\n\r\n\r\n    setTimeout(\r\n      () => {\r\n        this.setState({\r\n          isError: false,\r\n        })\r\n      },\r\n      1600\r\n    );\r\n  }\r\n\r\n  render() {\r\n\r\n    return(\r\n      <div id='CrawlingBanner' >\r\n          \r\n      <div className='Logo'>\r\n        <div className ='elements'>\r\n          <img src={logo} alt=\"logo\" height=\"40\" width=\"167\" />\r\n        </div>\r\n      </div>\r\n      \r\n      \r\n      <div className='Status'>\r\n        <div className ='elements'>\r\n          <text className=\"textLeft\">Recording is</text><text className=\"textRight\"> ON</text>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className='Bordering'>\r\n        <div className='elements'>\r\n        Bordering\r\n        <br></br>\r\n        <div className=\"toggle-switch\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-switch-checkbox\"\r\n          name=\"toggleSwitch\"\r\n          id=\"toggleSwitch\"\r\n          onChange={this.sendState}\r\n          defaultChecked\r\n        />\r\n        <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitch\">\r\n          <span className=\"toggle-switch-inner\" />\r\n          <span className=\"toggle-switch-switch\" />\r\n        </label>\r\n      </div>\r\n      </div>\r\n      </div>\r\n\r\n\r\n\r\n<form onSubmit={this.submitForm}>\r\n\r\n      <div className='EmailInput'>\r\n        <div className ='elements'>\r\n        <FormControl id=\"crawlingForm\" style={{ width:'30ch', paddingTop:'8px'}} onSubmit={this.submitForm} >\r\n\r\n          <TextField \r\n            size=\"small\"\r\n            id=\"filled-email\" \r\n            label=\"E-mail\" \r\n            type=\"text\" \r\n            name=\"email\"\r\n            variant=\"filled\" \r\n            onChange={this.handleInputChange}\r\n            value={this.state.values.email}\r\n            required\r\n          />\r\n        </FormControl>  \r\n        </div>\r\n      </div>\r\n\r\n      <div className='NotificationFreq'>\r\n        <div className ='elements'>\r\n        <FormControl variant=\"filled\" id=\"crawlingForm\" style={{ width: '25ch', paddingTop:'8px'}} size=\"small\">\r\n          <InputLabel id=\"simple-select-outlined-label\" style={{  paddingTop:'8px' }}>Notification frequency</InputLabel>\r\n   \r\n            <Select\r\n              labelId=\"simple-select-outlined-label\"\r\n              id=\"simple-select-outlined\"\r\n              name=\"period\"\r\n              value={this.state.values.period}\r\n              onChange={this.handleInputChange}\r\n              label=\"period\"\r\n              required=\"true\"\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>Choose one...</em>\r\n              </MenuItem>\r\n              <MenuItem value={1/360}>10sec</MenuItem>\r\n              <MenuItem value={1/60}>1min</MenuItem>\r\n              <MenuItem value={1/6}>10min</MenuItem>\r\n              <MenuItem value={0.5}>0.5h</MenuItem>\r\n              <MenuItem value={1}>1h</MenuItem>\r\n              <MenuItem value={6}>6h</MenuItem>\r\n              <MenuItem value={12}>12h</MenuItem>\r\n              <MenuItem value={24}>24h</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='SubmitButton'>\r\n        <div className ='elements'>\r\n          <FormControl id=\"crawlingForm\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<CloudUploadIcon />}\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </FormControl>\r\n        </div>\r\n      </div>\r\n      \r\n</form>  \r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TopBanner","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport TopBanner from './TopBanner';\r\n\r\n\r\n//this functional component has been created to get access to url in TopBanner.js\r\nfunction RenderBanner(props) {\r\n\r\n  const takeUrl =  useLocation();\r\n\r\n  return (\r\n      <TopBanner Callback={props.Callback} borderState={props.borderState} xpathFromParent={props.xpathFromParent} url={takeUrl.state.url} />\r\n  );\r\n}\r\nexport default RenderBanner;\r\n\r\n","import React from 'react';\r\nimport ExternalHtml from './ExternalHtml';\r\nimport '../../../css/Crawling.css';\r\nimport RenderBanner from './RenderBanner';\r\n\r\n\r\n\r\nclass Crawling extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      borderState: 0\r\n    };\r\n  }\r\n\r\n  callbackFunction = (borderSwitchState) => {\r\n    this.setState({ borderState: borderSwitchState });\r\n    console.log(this.state.borderState)\r\n    document.getElementById(\"pageFrame\").contentWindow.TurnOffBordering = this.state.borderState;\r\n    document.getElementById(\"pageFrame\").contentWindow.UpdateBorders();\r\n  };\r\n\r\n  TakeXpath (){\r\n    let takeXpath = document.getElementById(\"pageFrame\").contentWindow.xpathIframe;\r\n    return takeXpath\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <RenderBanner Callback={this.callbackFunction} borderState={this.state.borderState} xpathFromParent={this.TakeXpath} />\r\n        <div id='Content'>\r\n          <ExternalHtml />          \r\n        </div>\r\n      </div>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Crawling;","import React from \"react\"\r\nimport Header from '../Header'\r\nimport Footer from '../Footer'\r\nimport Button from '@material-ui/core/Button';\r\nimport error from '../../media/404-cat.png'\r\n\r\nimport {BrowserRouter as Router, Switch, Link} from \"react-router-dom\";\r\n\r\nfunction MyCrawlsMainContent() {\r\n    return (\r\n        <div>\r\n        <center>\r\n        <div className='background'>\r\n            <Header />\r\n                <main className=\"MainContent\">\r\n                <div className=\"PageContent\">\r\n                    <h2>I'm really sorry, but this page doesn't exist</h2>\r\n                    <img src={error} height=\"170px\" width=\"150px\" alt=\"how dare you?\" />\r\n                    <h4>Go back to the right path by clicking button below...</h4>\r\n                    <Router forceRefresh={true}><Switch><Link to=\"/\"><Button variant=\"contained\" color=\"primary\">Cats are better than dogs!</Button></Link></Switch></Router>\r\n                 </div>\r\n                </main>\r\n            <Footer />\r\n        </div>\r\n        </center>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default MyCrawlsMainContent","import React from 'react';\r\nimport './css/App.css';\r\nimport LoginRegister from \"./components/LoginRegisterPage/LoginRegister\"\r\nimport NewCrawl from './components/ContentPages/NewCrawlPage/NewCrawl';\r\nimport MyAccount from './components/ContentPages/MyAccountPage/MyAccount';\r\nimport MyCrawls from './components/ContentPages/MyCrawlsPage/MyCrawls';\r\nimport Crawling from './components/ContentPages/CrawlingPage/Crawling';\r\nimport NotFoundPage from './components/ContentPages/NotFoundPage';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <body>\r\n          {/* \r\n          A <Switch> looks through its children <Route>s and\r\n          renders the first one that matches the current URL. \r\n          */}\r\n          <Router>\r\n            <Switch>\r\n              <Route exact strict path=\"/\" component={LoginRegister} />  \r\n              <Route exact strict path=\"/my-account\" component={MyAccount} />\r\n              <Route exact strict path=\"/my-crawls\" component={MyCrawls} />\r\n              <Route exact strict path=\"/new-crawl\" component={NewCrawl} />\r\n              <Route path=\"/new-crawl/start-crawling\" component={Crawling} />\r\n              <Route exact strict path=\"/404\" component={NotFoundPage} />\r\n              <Redirect to=\"/404\" />\r\n            </Switch>\r\n          </Router> \r\n      </body>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}