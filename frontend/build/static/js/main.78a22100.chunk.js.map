{"version":3,"sources":["media/logo.png","components/ContentPages/CrawlingPage/logo.png","components/Header.js","components/Footer.js","components/LoginPage/LoginBox.js","components/LoginPage/RegisterBox.js","components/LoginPage/LoginPanel.js","components/LoginPage/LoginMainContent.js","components/ContentPages/LinkPage/LinkInput.js","components/ContentPages/LinkPage/LinkNavbar.js","components/ContentPages/LinkPage/LinkMainContent.js","components/ContentPages/MyAccountPage/MyAccountNavbar.js","components/ContentPages/MyAccountPage/MyAccountMainContent.js","components/ContentPages/MyCrawlsPage/MyCrawlsNavbar.js","components/ContentPages/MyCrawlsPage/MyCrawlsMainContent.js","components/ContentPages/CrawlingPage/TopBanner.js","components/ContentPages/CrawlingPage/Crawling.js","components/ContentPages/CrawlingPage/ExternalHtml.js","components/ContentPages/CrawlingPage/IndexCrawling.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","Footer","LoginBox","props","state","e","htmlFor","type","name","placeholder","to","onClick","this","submitLogin","bind","React","Component","MyTextInput","label","useField","field","meta","id","touched","error","MyCheckbox","children","RegisterBox","username","password","email","acceptedTerms","errors","initialValues","confirmPassword","validationSchema","Yup","max","required","min","oneOf","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","LoginPanel","isLoginOpen","isRegisterOpen","setState","showLoginBox","showRegisterBox","LoginMainContent","LinkInput","fetch","then","response","json","data","console","log","url","method","headers","pattern","value","onChange","getData","onClickCapture","onBlur","onInput","LinkNavbar","href","LinkContent","MyAccountNavbar","LinkMainContent","MyCrawlsMainContent","TopBanner","height","width","getElementXPath","element","paths","nodeType","parentNode","index","splice","sibling","previousSibling","Node","DOCUMENT_TYPE_NODE","nodeName","tagName","toLowerCase","pathIndex","length","join","getElementTreeXPath","currentElement","HelpElements","class","document","addEventListener","target","setInterval","$","text","Crawling","changeTitle","lastTarget","overlay","getElementById","title","show","$target","offset","css","outerWidth","outerHeight","left","top","handleLoad","window","removeEventListener","hide","IndexCrawling","ReactDOM","render","App","exact","path","component","MyAccountMainContent","Boolean","location","hostname","match","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.78a22100.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fe41c8fe.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.fe41c8fe.png\";","import React from \"react\"\r\n\r\nimport logo from '../media/logo.png';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"AppHeader\">\r\n            <img src={logo} className=\"AppLogo\" alt=\"logo\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"Footer\">\r\n            <text className=\"Footer-text\">\r\n                Innovative Projects Summer - Wrocław 2020\r\n            </text>      \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass LoginBox extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {};\r\n    }\r\n  \r\n    submitLogin(e) {}\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"inner-container\">\r\n          <div className=\"box\">\r\n  \r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                className=\"login-input\"\r\n                placeholder=\"Username\"/>\r\n            </div>\r\n  \r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className=\"login-input\"\r\n                placeholder=\"Password\"/>\r\n            </div>\r\n   \r\n                <Link to=\"/new-crawl\"> \r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"login-btn\"\r\n                    onClick={this\r\n                    .submitLogin\r\n                    .bind(this)}>Login</button>\r\n                </Link>\r\n\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  } \r\n\r\n  export default LoginBox\r\n ","import React from \"react\"\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst MyCheckbox = ({ children, ...props }) => {\r\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\r\n  return (\r\n    <>\r\n      <label className=\"checkbox\">\r\n        <input {...field} {...props} type=\"checkbox\" />\r\n        {children}\r\n      </label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst MySelect = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <div htmlFor={props.id || props.name}>{label}</div>\r\n      <div {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div>{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nclass RegisterBox extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"ss\",\r\n      email: \"\",\r\n      acceptedTerms: false,\r\n      errors: {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n      }\r\n      \r\n    };\r\n    \r\n  }\r\n  \r\n  render() {\r\n    const {errors} = this.state;\r\n    return (\r\n        <div className=\"inner-container\">\r\n          \r\n          <div className=\"box\">\r\n\r\n          <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n          acceptedTerms: false, // added for our checkbox\r\n        }}\r\n        validationSchema={Yup.object({\r\n          password: Yup.string()\r\n            .max(30, \"Must be 30 characters or less\")\r\n            .required(\"Password required\")\r\n            .min(8, \"Minimum length 8\"),\r\n            confirmPassword: Yup.string()\r\n            .required(\"Password required\")\r\n            .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n          email: Yup.string()\r\n            .email(\"Invalid email address\")\r\n            .required(\"Email required\"),\r\n          acceptedTerms: Yup.boolean()\r\n            .required(\"Required\")\r\n            .oneOf([true], \"You must accept the terms and conditions\"),\r\n        })}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n          }, 400);\r\n        }}\r\n      >\r\n        <div className=\"scroll\">\r\n        <Form>\r\n        <div className=\"input-group\">\r\n        <MyTextInput\r\n            label=\"Email Address\"\r\n            type='email' \r\n            name='email' \r\n            className=\"login-input\" \r\n            placeholder=\"Email\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Password\"\r\n            type='password' \r\n            name='password' \r\n            className=\"login-input\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Confirm password\"\r\n            type='password' \r\n            name='confirmPassword' \r\n            className=\"login-input\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <MyCheckbox name=\"acceptedTerms\">\r\n            I accept the terms and conditions\r\n          </MyCheckbox>\r\n\r\n          <button className=\"login-btn\" type=\"submit\">Submit</button>\r\n          </div>\r\n        </Form>\r\n        </div>\r\n      </Formik>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default RegisterBox","import React from \"react\"\r\n\r\n\r\nimport LoginBox from \"./LoginBox\"\r\nimport RegisterBox from \"./RegisterBox\"\r\n\r\nclass LoginPanel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isLoginOpen: true,\r\n          isRegisterOpen: false\r\n        };\r\n    }\r\n\r\n     showLoginBox() {\r\n        this.setState({isLoginOpen: true, isRegisterOpen: false});\r\n        }\r\n        \r\n     showRegisterBox() {\r\n        this.setState({isRegisterOpen: true, isLoginOpen: false});\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <div className=\"root-container\">\r\n                  <div className=\"box-controller\">\r\n                      <div\r\n                          className={\"controller \" + (this.state.isLoginOpen\r\n                          ? \"selected-controller\"\r\n                          : \"\")}\r\n                          onClick={this\r\n                          .showLoginBox\r\n                          .bind(this)}>\r\n                          Login\r\n                      </div>\r\n                      <div\r\n                          className={\"controller \" + (this.state.isRegisterOpen\r\n                          ? \"selected-controller\"\r\n                          : \"\")}\r\n                          onClick={this\r\n                          .showRegisterBox\r\n                          .bind(this)}>\r\n                          Register\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"box-container\">\r\n                  {this.state.isLoginOpen && <LoginBox />}\r\n                  {this.state.isRegisterOpen && <RegisterBox />}\r\n                  </div>\r\n              </div>\r\n            );\r\n        }\r\n      \r\n}\r\n\r\nexport default LoginPanel  ","import React from \"react\"\r\nimport LoginPanel from \"./LoginPanel\"\r\n\r\nfunction LoginMainContent() {\r\n    return (\r\n        <div>\r\n        <main className=\"MainContent\">\r\n            <LoginPanel />\r\n        </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginMainContent","import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\"\r\n\r\n//import fetch from 'isomorphic-unfetch'\r\n\r\n//const API = './api/v1/link';\r\n//const DEFAULT_QUERY = 'GET';\r\n\r\nexport let parsedPage;\r\nconst data = \"\"\r\n\r\nclass LinkInput extends React.Component{\r\n \r\n//wersja 1\r\nasync onSubmit(){\r\n  await fetch(\"/{cokolwiek}\")\r\n                    .then((response) => {\r\n                      alert(response);\r\n                      return response.json();\r\n                    })\r\n                    .then((data) => {\r\n                      console.log(data);\r\n                    });\r\n} \r\n                  \r\n//wersja 2\r\nasync getData(url = '/{cokolwiek}', data = \"link\") {\r\n  const response = await fetch(url, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'link': '{link}'\r\n    },\r\n  })\r\n  .then((response) => {\r\n    alert(response);\r\n    return response.json();\r\n  })\r\n  .then((data) => {\r\n    console.log(data);\r\n  });\r\n};\r\n            \r\n  render(){\r\n    return (\r\n        <div> \r\n            <linkinput className=\"LinkInput\">\r\n                {/* eventually: formAction, formMethod inside of input element\r\n                action should call endpoint on backend */}\r\n                <form>\r\n                    <h1>Paste your link below</h1>\r\n                    <input type=\"text\" name=\"link\"  pattern=\"https?://.+\" required  />\r\n                        <input type=\"submit\" value=\"Go to website\" onChange={this.getData} onSubmit={this.getData} onClick={this.getData} onClickCapture={this.getData} onBlur={this.getData} onInput={this.getData} required>\r\n                          \r\n                        </input>\r\n                    <h5>Remember that your link should start with \"http://\".</h5>  \r\n                    \r\n\r\n                    <Link to=\"/start-crawling\"><button>tymczasowe \"go to website\"</button></Link>\r\n\r\n\r\n                </form>\r\n            </linkinput>\r\n        </div>\r\n    )\r\n    }\r\n\r\n}\r\nexport default LinkInput\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nformAction='http://127.0.0.1:8000/new-crawl?link=https%3A%2F%2Fwww.wp.pl%2F' formMethod='GET'\r\n\r\n\r\n\r\n\r\nstara wersja: \r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      values: {\r\n        link: \"\",\r\n      },\r\n      isSubmitting: false,\r\n      isError: false\r\n    };\r\n  }\r\n  \r\n  changeStatus = () => {\r\n    this.statusChecker = false;\r\n    return statusChecker\r\n  }\r\n\r\n  submitForm = async e => {\r\n\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.setState({ isSubmitting: true });\r\n\r\n    const res = await fetch(\"./link\");\r\n    this.setState({ isSubmitting: false });\r\n    data = await res.json();\r\n\r\n    //parsedPage = JSON.parse(data);\r\n\r\n    !data.hasOwnProperty(\"error\")\r\n      ? this.setState({ message: data.success})\r\n      : this.setState({ message: data.error, isError: true });\r\n\r\n    setTimeout(\r\n      () =>\r\n        this.setState({\r\n          isError: false,\r\n          message: \"\",\r\n          values: { link: \"\"}\r\n        }),\r\n      1600\r\n    );\r\n  };\r\n\r\n  handleInputChange = e =>\r\n    this.setState({\r\n      values: { ...this.state.values, [e.target.name]: e.target.value }\r\n    });\r\n\r\n  render() {\r\n    return (\r\n      <linkinput className=\"LinkInput\">\r\n      <div>\r\n        <form onSubmit={ this.submitForm } formAction=\"./link\" formMethod=\"GET\"> \r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"link\"><h1>Paste your link below</h1></label>\r\n            <input\r\n              type=\"link\"\r\n              name=\"link\"\r\n              id=\"link\"\r\n              value={this.state.values.link}\r\n              onChange={this.handleInputChange}\r\n              title=\"Link\"\r\n              formAction='./link'\r\n              formMethod='GET'\r\n              required\r\n            />\r\n          </div>\r\n         <button type=\"submit\" onClick=\"statusChecker=false\">Submit link</button>\r\n        </form>\r\n        <div className={`message ${this.state.isError && \"error\"}`}>\r\n          {this.state.isSubmitting ? \"Submitting...\" : this.state.message}\r\n          {this.changeState}\r\n        </div>\r\n        <Link to='./start-crawling'><button type=\"button\" disabled={statusChecker} >Go to website</button></Link>\r\n      </div>\r\n\r\n      </linkinput>\r\n    );\r\n  }\r\n\r\n\r\n\r\nwersja 2:\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      values: {\r\n        link: \"\",\r\n      },\r\n      isSubmitting: false,\r\n      isError: false\r\n    };\r\n  }\r\n  \r\n  changeStatus = () => {\r\n    this.statusChecker = false;\r\n    return statusChecker\r\n  }\r\n\r\n  submitForm = async e => {\r\n\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.setState({ isSubmitting: true });\r\n\r\n    fetch(API + DEFAULT_QUERY)\r\n      .then(data => data.json())\r\n      .then(html => this.setState({ hits: html.hits }))\r\n      .then(this.setState({ isSubmitting: false }));\r\n\r\n    !data.hasOwnProperty(\"error\")\r\n      ? this.setState({ message: data.success})\r\n      : this.setState({ message: data.error, isError: true });\r\n\r\n    setTimeout(\r\n      () =>\r\n        this.setState({\r\n          isError: false,\r\n          message: \"\",\r\n          values: { link: \"\"}\r\n        }),\r\n      3000\r\n    );\r\n  };\r\n\r\n  handleInputChange = e =>\r\n    this.setState({\r\n      values: { ...this.state.values, [e.target.name]: e.target.value }\r\n    });\r\n\r\n  render() {\r\n    return (\r\n      <linkinput className=\"LinkInput\">\r\n      <div>\r\n        <form onSubmit={ this.submitForm } formAction=\"./link\" formMethod=\"GET\"> \r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"link\"><h1>Paste your link below</h1></label>\r\n            <input\r\n              type=\"link\"\r\n              name=\"link\"\r\n              id=\"link\"\r\n              value={this.state.values.link}\r\n              onChange={this.handleInputChange}\r\n              title=\"Link\"\r\n              formAction='./link'\r\n              formMethod='GET'\r\n              required\r\n            />\r\n          </div>\r\n         <button type=\"submit\" onClick=\"statusChecker=false\">Submit link</button>\r\n        </form>\r\n        <div className={`message ${this.state.isError && \"error\"}`}>\r\n          {this.state.isSubmitting ? \"Submitting...\" : this.state.message}\r\n          {this.changeState}\r\n        </div>\r\n        <Link to='./start-crawling'><button type=\"button\" disabled={statusChecker} >Go to website</button></Link>\r\n      </div>\r\n\r\n      </linkinput>\r\n    );\r\n  }\r\n\r\n\r\n\r\nz ładowaniem się + fajny fetch: \r\n\r\n render() {\r\n    const linkTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row mb-5\">\r\n          <div className=\"col-lg-12 text-center\">\r\n            <h1 className=\"mt-5\">Paste your link below...</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <Formik\r\n              initialValues={{link: \"\"}}\r\n              validate={values => {\r\n                let errors = {};\r\n                if (values.link === \"\") {\r\n                  errors.link = \"Link is required\";\r\n                } else if (!linkTest(values.link)) {\r\n                  errors.link = \"Invalid link format\";\r\n                }\r\n                return errors;\r\n              }}\r\n              onSubmit={ async (values, { setSubmitting }) => {\r\n                const res = await fetch(`./${values.link}`, {\r\n                    method: 'GET',\r\n                   }).then(response => response.json());\r\n                console.log(res);\r\n                //props = res;\r\n                //return props;\r\n                setTimeout(() => {\r\n                    alert(JSON.stringify(res, null, 2));\r\n                    setSubmitting(false);\r\n                }, 400);\r\n              }}\r\n            >\r\n              {({ touched, errors, isSubmitting }) => (\r\n                <Form>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"link\">Link</label>\r\n                    <Field\r\n                      type=\"link\"\r\n                      name=\"link\"\r\n                      placeholder=\"Enter link\"\r\n                      className={`form-control ${\r\n                        touched.link && errors.link ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                    />\r\n                    <ErrorMessage\r\n                      component=\"div\"\r\n                      name=\"link\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={isSubmitting}\r\n                  >\r\n                   {isSubmitting ? \"Please wait...\" : \"Submit\"}\r\n                  </button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  z ładowaniem się zmienione: \r\n\r\n   render() {\r\n    const linkTest = \"\";\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row mb-5\">\r\n          <div className=\"col-lg-12 text-center\">\r\n            <h1 className=\"mt-5\">Paste your link below...</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <Formik\r\n              initialValues={{link: \"\"}}\r\n              validate={values => {\r\n                let errors = {};\r\n                if (values.link === \"\") {\r\n                  errors.link = \"Link is required\";\r\n                } /*else if (!linkTest(values.link)) {\r\n                  errors.link = \"Invalid link format\";\r\n                }\r\n                return errors;\r\n              }}\r\n              onSubmit={ async (values, { setSubmitting }) => {\r\n                const res = await fetch(\"/link\", {\r\n                    method: 'GET',\r\n                    /*\r\n                    body: {\r\n                      \"link\": {values}\r\n                    }\r\n                    \r\n                   }).then(response => response.json());\r\n                console.log(res);\r\n                this.parsedPage = JSON.html(res);\r\n                //props = res;\r\n                //return props;\r\n                setTimeout(() => {\r\n                    alert(JSON.stringify(res, null, 2));\r\n                    setSubmitting(false);\r\n                }, 2000);\r\n              }}\r\n            >\r\n              {({ touched, errors, isSubmitting }) => (\r\n                <Form>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"link\">Link</label>\r\n                    <Field\r\n                      type=\"link\"\r\n                      name=\"link\"\r\n                      placeholder=\"Enter link\"\r\n                      className={`form-control ${\r\n                        touched.link && errors.link ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                    />\r\n                    <ErrorMessage\r\n                      component=\"div\"\r\n                      name=\"link\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={isSubmitting}\r\n                  >\r\n                   {isSubmitting ? \"Please wait...\" : \"Submit\"}\r\n                  </button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n          <Link to='./start-crawling'><button type=\"button\" disabled={this.statusChecker} >Go to website</button></Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nzaawansowana wersja:\r\n\r\nconstructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          formValues: {\r\n            link: \"\",\r\n          },\r\n          formErrors: {\r\n            link: \"\",\r\n          },\r\n          formValidity: {\r\n            link: false,\r\n          },\r\n          isSubmitting: false\r\n        };\r\n      }\r\n    \r\n      handleChange = ({ target }) => {\r\n        const { formValues } = this.state;\r\n        formValues[target.name] = target.value;\r\n        this.setState({ formValues });\r\n        this.handleValidation(target);\r\n      };\r\n    \r\n      handleValidation = target => {\r\n        const { name, value } = target;\r\n        const fieldValidationErrors = this.state.formErrors;\r\n        const validity = this.state.formValidity;\r\n        const isLink = name === \"link\";\r\n        const linkTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n    \r\n        validity[name] = value.length > 0;\r\n        fieldValidationErrors[name] = validity[name]\r\n          ? \"\"\r\n          : `${name} is required and cannot be empty`;\r\n    \r\n        if (validity[name]) {\r\n          if (isLink) {\r\n            validity[name] = linkTest.test(value);\r\n            fieldValidationErrors[name] = validity[name]\r\n              ? \"\"\r\n              : `${name} should be a valid link`;\r\n          }\r\n        }\r\n    \r\n        this.setState({\r\n          formErrors: fieldValidationErrors,\r\n          formValidity: validity\r\n        });\r\n      };\r\n    \r\n      handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.setState({ isSubmitting: true });\r\n        const { formValues, formValidity } = this.state;\r\n        if (Object.values(formValidity).every(Boolean)) {\r\n          alert(\"Form is validated! Submitting the form...\");\r\n          this.setState({ isSubmitting: false });\r\n        } else {\r\n          for (let key in formValues) {\r\n            let target = {\r\n              name: key,\r\n              value: formValues[key]\r\n            };\r\n            this.handleValidation(target);\r\n          }\r\n          this.setState({ isSubmitting: false });\r\n        }\r\n      };\r\n    \r\n      render() {\r\n        const { formValues, formErrors, isSubmitting } = this.state;\r\n        return (\r\n            <linkinput className=\"LinkInput\">\r\n          <div className=\"container\">\r\n            <div className=\"row mb-5\">\r\n              <div className=\"col-lg-12 text-center\">\r\n                <h1 className=\"mt-5\">Login Form</h1>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label>Link</label>\r\n                    <input\r\n                      type=\"link\"\r\n                      name=\"link\"\r\n                      className={`form-control ${\r\n                        formErrors.link ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      placeholder=\"Enter link\"\r\n                      onChange={this.handleChange}\r\n                      value={formValues.link}\r\n                    />\r\n                    <div className=\"invalid-feedback\">{formErrors.link}</div>\r\n                  </div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={isSubmitting}\r\n                  >\r\n                    {isSubmitting ? \"Please wait...\" : \"Submit\"}\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </linkinput>\r\n        );\r\n      }\r\n    }\r\n        const rootElement = document.getElementById(\"root\");\r\n    ReactDOM.render(<LoginForm />, rootElement);\r\n\r\n\r\n\r\n\r\nprawdopodobnie dziala:\r\n\r\n          render() {\r\n        return (\r\n          <div>\r\n          <h1>Anywhere in your app!</h1>\r\n          <Formik\r\n            initialValues={{ email: ''}}\r\n            validate={values => {\r\n              const errors = {};\r\n              if (!values.email) {\r\n                errors.email = 'Required';\r\n              } else if (\r\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n              ) {\r\n                errors.email = 'Invalid email address';\r\n              }\r\n              return errors;\r\n            }}\r\n            onSubmit={ async (values, { setSubmitting }) => {\r\n              const res = await fetch(`./${values.email}`, {\r\n                  method: 'GET',\r\n                  headers: {\r\n                      'Content-Type': 'application/json',\r\n                      'Access-Control-Allow-Origin': '*'\r\n                  }}).then(response => response.json());\r\n              console.log(res);\r\n              //props = res;\r\n              //return props;\r\n              setTimeout(() => {\r\n                  alert(JSON.stringify(res, null, 2));\r\n                  setSubmitting(false);\r\n              }, 400);\r\n            }}\r\n          >\r\n            {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              /* and other goodies \r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.email}\r\n                />\r\n                {errors.email && touched.email && errors.email}\r\n                <button type=\"submit\" disabled={isSubmitting}>\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      values: {\r\n        link: \"\",\r\n      },\r\n      isSubmitting: false,\r\n      isError: false,\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  \r\n  statusChecker = () => {\r\n    let statusChecker = true;\r\n    return statusChecker;\r\n  }\r\n\r\n  handleClick(status) {\r\n    this.statusChecker = status;\r\n    return this.statusChecker\r\n  }\r\n\r\n  submitForm = async e => {\r\n\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.setState({ isSubmitting: true });\r\n\r\n    const res = await fetch(API + DEFAULT_QUERY)\r\n                .then(response => response.json())\r\n                .then(html => this.setState({ hits: html.hits }))\r\n                .then(this.setState({ isSubmitting: false }));\r\n\r\n    alert(JSON.stringify(res, null, 2));\r\n    this.parsedPage = JSON.html();\r\n\r\n    !data.hasOwnProperty(\"error\")\r\n      ? this.setState({ message: data.success})\r\n      : this.setState({ message: data.error, isError: true });\r\n\r\n    setTimeout(\r\n      () =>\r\n        this.setState({\r\n          isError: false,\r\n          message: \"\",\r\n          values: { link: \"\" }\r\n        }),\r\n      1600\r\n    );\r\n  };\r\n\r\n  handleInputChange = e =>\r\n    this.setState({\r\n      values: { ...this.state.values, [e.target.name]: e.target.value }\r\n    });\r\n\r\n  render() {\r\n    return (\r\n      <linkinput className=\"LinkInput\">\r\n      <div>\r\n        <form onSubmit={ this.submitForm } formAction=\"./link\" formMethod=\"GET\"> \r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"link\"><h1>Paste your link below</h1></label>\r\n            <input\r\n              type=\"link\"\r\n              name=\"link\"\r\n              id=\"link\"\r\n              value={this.state.values.link}\r\n              onChange={this.handleInputChange}\r\n              title=\"Link\"\r\n              formAction='./link'\r\n              formMethod='GET'\r\n              required\r\n            />\r\n          </div>\r\n        <button type=\"submit\" onClick={this.handleClick(false)}>\r\n           Submit link\r\n        </button>\r\n        </form>\r\n        <div className={`message ${this.state.isError && \"error\"}`}>\r\n          {this.state.isSubmitting ? \"Submitting...\" : this.state.message}\r\n          {this.changeState}\r\n        </div>\r\n        <Link to='./start-crawling'><button type=\"button\" disabled={this.statusChecker} >Go to website</button></Link>\r\n      </div>\r\n\r\n      </linkinput>\r\n    );\r\n  }\r\n\r\n\r\n\r\n*/","import React from \"react\"\r\n\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass LinkNavbar extends React.Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n              <center>\r\n              <ul className=\"nav\">\r\n                <li><Link to='/my-crawls'>My Crawls</Link></li>\r\n                <li><Link to='/new-crawl'><u>New Crawl</u></Link></li>\r\n                <li><Link to='/my-account'>My Account</Link></li>\r\n                <li><a href=\"/\">Logout</a></li>\r\n              </ul>\r\n              </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LinkNavbar","import React from \"react\"\r\nimport LinkInput from './LinkInput'\r\nimport Navbar from './LinkNavbar'\r\n\r\nfunction LinkContent() {\r\n    return (\r\n        <div>\r\n            <center>\r\n                <main className=\"MainContent\">\r\n                    <LinkInput />\r\n                    <Navbar />\r\n                </main>\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LinkContent","import React from \"react\"\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass MyAccountNavbar extends React.Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n              <center>\r\n              <ul className=\"nav\">\r\n                <li><Link to='/my-crawls'>My Crawls</Link></li>\r\n                <li><Link to='/new-crawl'>New Crawl</Link></li>\r\n                <li><Link to='/my-account'><u>My Account</u></Link></li>\r\n                <li><a href=\"/\">Logout</a></li>\r\n              </ul>\r\n              </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyAccountNavbar","import React from \"react\"\r\nimport Navbar from './MyAccountNavbar.js'\r\n\r\nfunction LinkMainContent() {\r\n    return (\r\n        <div>\r\n            <center>\r\n                <main className=\"MainContent\">\r\n                    <Navbar />\r\n                </main>\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LinkMainContent","import React from \"react\"\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass MyAccountNavbar extends React.Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n              <center>\r\n              <ul className=\"nav\">\r\n                <li><Link to='/my-crawls'><u>My Crawls</u></Link></li>\r\n                <li><Link to='/new-crawl'>New Crawl</Link></li>\r\n                <li><Link to='/my-account'>My Account</Link></li>\r\n                <li><a href=\"/\">Logout</a></li>\r\n              </ul>\r\n              </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyAccountNavbar","import React from \"react\"\r\nimport Navbar from './MyCrawlsNavbar.js'\r\n\r\nfunction MyCrawlsMainContent() {\r\n    return (\r\n        <div>\r\n            <center>\r\n                <main className=\"MainContent\">\r\n                    <Navbar />\r\n                </main>\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyCrawlsMainContent","import React from 'react';\r\nimport logo from './logo.png'\r\nfunction TopBanner() {\r\n    return (\r\n      \r\n        <div className='CrawlingBanner'>\r\n          \r\n\r\n          <div className='Logo'>\r\n            <div className ='elements'>\r\n              <img src={logo} alt=\"logo\" height=\"40\" width=\"167\" />\r\n            </div>\r\n          </div>\r\n          \r\n\r\n          <div className='StatusBox'>\r\n            <div className ='elements'>\r\n              <h4>Recording is ON</h4>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className='Setting1'>\r\n            <div className ='elements'>\r\n              <h4>something</h4>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='Setting2'>\r\n            <div className ='elements'>\r\n              <h4>something</h4>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='SubmitButton'>\r\n            <div className ='elements'>\r\n              <button className='submit'>Submit</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='xPaths'>\r\n            <div className ='elements'>\r\n              <text id=\"status\">Wait for it... or enable JavaScript.</text>\r\n              <br /><text id=\"status2\">Wait for it... or enable JavaScript.</text>\r\n            </div>\r\n          </div>\r\n  \r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default TopBanner","import React from 'react';\r\nimport $ from 'jquery';\r\nimport TopBanner from './TopBanner'\r\nimport ExternalHtml from './ExternalHtml'\r\n\r\nvar getElementTreeXPath = function(element) {\r\n  var paths = [];\r\n\r\n  // Use nodeName (instead of localName) so namespace prefix is included (if any).\r\n  for (; element && element.nodeType === 1; element = element.parentNode)  {\r\n      var index = 0;\r\n      // EXTRA TEST FOR ELEMENT.ID\r\n      if (element && element.id) {\r\n          paths.splice(0, 0, '/*[@id=\"' + element.id + '\"]');\r\n          break;\r\n      }\r\n\r\n      for (var sibling = element.previousSibling; sibling; sibling = sibling.previousSibling) {\r\n          // Ignore document type declaration.\r\n          if (sibling.nodeType === Node.DOCUMENT_TYPE_NODE)\r\n            continue;\r\n\r\n          if (sibling.nodeName === element.nodeName)\r\n              ++index;\r\n      }\r\n\r\n      var tagName = element.nodeName.toLowerCase();\r\n      var pathIndex = (index ? \"[\" + (index+1) + \"]\" : \"\");\r\n      paths.splice(0, 0, tagName + pathIndex);\r\n  }\r\n\r\n  return paths.length ? \"/\" + paths.join(\"/\") : null;\r\n};\r\n\r\nvar getElementXPath = function(element) {\r\n  if (element && element.id)\r\n      return '//*[@id=\"' + element.id + '\"]';\r\n  else\r\n      return getElementTreeXPath(element);\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// TO MOŻNA POTEM USUNĄĆ \\/\r\nvar currentElement = null;\r\ndocument.addEventListener('mouseover', function (e) {\r\n  currentElement = e.target;});\r\n\r\nsetInterval(function() {\r\n$('#status').text('The current element is: ' + (getElementXPath(currentElement)) + '.');\r\n}, 1);\r\n// TO MOŻNA POTEM USUNĄĆ /\\\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction HelpElements() {\r\n  return (\r\n    <div>\r\n            <div id='empty'></div>\r\n            <div id='outer' class='outer'></div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nclass Crawling extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"Click here\"\r\n    };\r\n    this.changeTitle = this.changeTitle.bind(this);\r\n    this.handleLoad = this.handleLoad.bind(this);\r\n}\r\n\r\ncomponentDidMount() {\r\n  window.addEventListener('click', this.handleLoad);\r\n}\r\n\r\ncomponentWillUnmount() { \r\n window.removeEventListener('click', this.handleLoad)  \r\n}\r\n\r\nhandleLoad(e) {\r\n  var target\r\n  target = e.target;\r\n  if (target && target.className === \"outer\" ) \r\n  {   \r\n      var overlay = $(document.getElementById('outer'))\r\n      overlay.hide();\r\n      target = document.getElementById('empty');\r\n  }\r\n}\r\n\r\nchangeTitle = (e) => {\r\n  var target, lastTarget;\r\n  var overlay = $(document.getElementById('outer'))\r\n  target = e.target;\r\n  this.setState({ title: getElementXPath(target) });\r\n\r\n  \r\n  overlay.show();\r\n\r\n  if (target === lastTarget) return;\r\n  lastTarget = target;\r\n  var $target = $(target);\r\n  var offset = $target.offset();\r\n  overlay.css({\r\n      width:  $target.outerWidth()  - 1, \r\n      height: $target.outerHeight() - 1, \r\n      left:   offset.left, \r\n      top:    offset.top \r\n  });\r\n\r\n};\r\n\r\n\r\n      render() {\r\n          return (\r\n            <div>\r\n\r\n            <div><TopBanner /></div>\r\n            <div><HelpElements /></div>\r\n\r\n              <div className='Content'></div>\r\n              <div id='HereWillBeContent' onClick={this.changeTitle}>{this.state.title}>\r\n\r\n\r\n<br></br>\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n                  <h1 id='aaaaasdasdasdasd'>element h1</h1>\r\n              <h4>element dddh4</h4>\r\n              <h1>Welcome</h1>\r\n      <button class=\"n\">Click me</button>\r\n\r\n      <button onClick={() => alert('Kliknięto!')}>Kliknij!</button>   \r\n\r\n\r\n{/*  do wyświetlania obcego html (nie działa jeszcze) \r\n\r\n      <ExternalHtml />\r\n\r\n{/* /////////////////////////////////////////////////// */}\r\n\r\n\r\n         <div>Witaj, </div>\r\n         \r\n\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n               Explicabo voluptates doloremque quisquam omnis rem fuga \r\n               veritatis odit! Perferendis cupiditate corporis consequuntur\r\n                amet ducimus quam       <button class=\"n\">Click me1</button>\r\nat magni facilis debitis ut quisquam molestias\r\n                 maxime voluptatibus voluptatum    <div>     sadasdsasadasdsa <button class=\"n\">Click me2</button>\r\n</div>  <button class=\"n\">Click me3</button>\r\n minima in totam. Velit inventore\r\n                  deserunt facilis temporibus id provident illo optio ipsa aut consequuntur \r\n                  sed repellat dolorem obcaecati iusto ab. Placeat \r\n                  repellat dolores \r\n                  debitis deleniti ipsum a accusamus in necessitatibus perferendis nostrum laudantium error modi \r\n                     adipisci aliquam a deleniti omnis expedita quis natus. Velit placeat fugit officiis non nihil \r\n                     fuga dolorum veritatis maiores fugiat eligendi iste veniam tempore deserunt.</p>\r\n      <button>More test buttons</button>\r\n              \r\n              <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam voluptatem a\r\n                   architecto nihil ullam. Non dolores optio ea dolorem accusantium a delectus \r\n                   molestias quam nulla fugit voluptas iste ipsum! Molestias id quaerat praesentium \r\n                   quo a illum optio sed at ut ad corporis asperiores eos dolorum commodi laboriosam\r\n                    adipisci provident voluptas \r\n                     nemo soluta voluptas molestias similique ex. Praesentium sequi natus molestiae \r\n                     adipisci perspiciatis voluptatibus et vero nisi!</p>\r\n                     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam voluptatem a\r\n                   architecto nihil ullam. Non dolores optio ea dolorem accusantium a delectus \r\n                   molestias quam nulla fugit voluptas iste ipsum! Molestias id quaerat praesentium \r\n                   quo a illum optio sed at ut ad corporis asperiores eos dolorum commodi laboriosam\r\n                    adipisci provident voluptas \r\n                     nemo soluta voluptas molestias similique ex. Praesentium sequi natus molestiae \r\n                     adipisci perspiciatis voluptatibus et vero nisi!</p>\r\n                     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam voluptatem a\r\n                   architecto nihil ullam. Non dolores optio ea dolorem accusantium a delectus \r\n                   molestias quam nulla fugit voluptas iste ipsum! Molestias id quaerat praesentium \r\n                   quo a illum optio sed at ut ad corporis asperiores eos dolorum commodi laboriosam\r\n                    adipisci provident voluptas \r\n                     nemo soluta voluptas molestias similique ex. Praesentium sequi natus molestiae \r\n                     adipisci perspiciatis voluptatibus et vero nisi!</p>\r\n                     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam voluptatem a\r\n                   architecto nihil ullam. Non dolores optio ea dolorem accusantium a delectus \r\n                   molestias quam nulla fugit voluptas iste ipsum! Molestias id quaerat praesentium \r\n                   quo a illum optio sed at ut ad corporis asperiores eos dolorum commodi laboriosam\r\n                    adipisci provident voluptas \r\n                     nemo soluta voluptas molestias similique ex. Praesentium sequi natus molestiae \r\n                     adipisci perspiciatis voluptatibus et vero nisi!</p>\r\n                     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam voluptatem a\r\n                   architecto nihil ullam. Non dolores optio ea dolorem accusantium a delectus \r\n                   molestias quam nulla fugit voluptas iste ipsum! Molestias id quaerat praesentium \r\n                   quo a illum optio sed at ut ad corporis asperiores eos dolorum commodi laboriosam\r\n                    adipisci provident voluptas \r\n                     nemo soluta voluptas molestias similique ex. Praesentium sequi natus molestiae \r\n                     adipisci perspiciatis voluptatibus et vero nisi!</p>\r\n                     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam voluptatem a\r\n                   architecto nihil ullam. Non dolores optio ea dolorem accusantium a delectus \r\n                   molestias quam nulla fugit voluptas iste ipsum! Molestias id quaerat praesentium \r\n                   quo a illum optio sed at ut ad corporis asperiores eos dolorum commodi laboriosam\r\n                    adipisci provident voluptas \r\n                     nemo soluta voluptas molestias similique ex. Praesentium sequi natus molestiae \r\n                     adipisci perspiciatis voluptatibus et vero nisi!</p>\r\n                     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam voluptatem a\r\n                   architecto nihil ullam. Non dolores optio ea dolorem accusantium a delectus \r\n                   molestias quam nulla fugit voluptas iste ipsum! Molestias id quaerat praesentium \r\n                   quo a illum optio sed at ut ad corporis asperiores eos dolorum commodi laboriosam\r\n                    adipisci provident voluptas \r\n                     nemo soluta voluptas molestias similique ex. Praesentium sequi natus molestiae \r\n                     adipisci perspiciatis voluptatibus et vero nisi!</p>\r\n                     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam voluptatem a\r\n                   architecto nihil ullam. Non dolores optio ea dolorem accusantium a delectus \r\n                   molestias quam nulla fugit voluptas iste ipsum! Molestias id quaerat praesentium \r\n                   quo a illum optio sed at ut ad corporis asperiores eos dolorum commodi laboriosam\r\n                    adipisci provident voluptas \r\n                     nemo soluta voluptas molestias similique ex. Praesentium sequi natus molestiae \r\n                     adipisci perspiciatis voluptatibus et vero nisi!</p>\r\n                     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam voluptatem a\r\n                   architecto nihil ullam. Non dolores optio ea dolorem accusantium a delectus \r\n                   molestias quam nulla fugit voluptas iste ipsum! Molestias id quaerat praesentium \r\n                   quo a illum optio sed at ut ad corporis asperiores eos dolorum commodi laboriosam\r\n                    adipisci provident voluptas \r\n                     nemo soluta voluptas molestias similique ex. Praesentium sequi natus molestiae \r\n                     adipisci perspiciatis voluptatibus et vero nisi!</p>\r\n                     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam voluptatem a\r\n                   architecto nihil ullam. Non dolores optio ea dolorem accusantium a delectus \r\n                   molestias quam nulla fugit voluptas iste ipsum! Molestias id quaerat praesentium \r\n                   quo a illum optio sed at ut ad corporis asperiores eos dolorum commodi laboriosam\r\n                    adipisci provident voluptas \r\n                     nemo soluta voluptas molestias similique ex. Praesentium sequi natus molestiae \r\n                     adipisci perspiciatis voluptatibus et vero nisi!</p>\r\n                     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam voluptatem a\r\n                   architecto nihil ullam. Non dolores optio ea dolorem accusantium a delectus \r\n                   molestias quam nulla fugit voluptas iste ipsum! Molestias id quaerat praesentium \r\n                   quo a illum optio sed at ut ad corporis asperiores eos dolorum commodi laboriosam\r\n                    adipisci provident voluptas \r\n                     nemo soluta voluptas molestias similique ex. Praesentium sequi natus molestiae \r\n                     adipisci perspiciatis voluptatibus et vero nisi!</p>\r\n                     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam voluptatem a\r\n                   architecto nihil ullam. Non dolores optio ea dolorem accusantium a delectus \r\n                   molestias quam nulla fugit voluptas iste ipsum! Molestias id quaerat praesentium \r\n                   quo a illum optio sed at ut ad corporis asperiores eos dolorum commodi laboriosam\r\n                    adipisci provident voluptas \r\n                     nemo soluta voluptas molestias similique ex. Praesentium sequi natus molestiae \r\n                     adipisci perspiciatis voluptatibus et vero nisi!</p>\r\n                     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam voluptatem a\r\n                   architecto nihil ullam. Non dolores optio ea dolorem accusantium a delectus \r\n                   molestias quam nulla fugit voluptas iste ipsum! Molestias id quaerat praesentium \r\n                   quo a illum optio sed at ut ad corporis asperiores eos dolorum commodi laboriosam\r\n                    adipisci provident voluptas \r\n                     nemo soluta voluptas molestias similique ex. Praesentium sequi natus molestiae \r\n                     adipisci perspiciatis voluptatibus et vero nisi!</p>\r\n                     <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam voluptatem a\r\n                   architecto nihil ullam. Non dolores optio ea dolorem accusantium a delectus \r\n                   molestias quam nulla fugit voluptas iste ipsum! Molestias id quaerat praesentium \r\n                   quo a illum optio sed at ut ad corporis asperiores eos dolorum commodi laboriosam\r\n                    adipisci provident voluptas \r\n                     nemo soluta voluptas molestias similique ex. Praesentium sequi natus molestiae \r\n                     adipisci perspiciatis voluptatibus et vero nisi!</p>\r\n              </div>\r\n      \r\n          </div>\r\n          );\r\n      }\r\n    \r\n}\r\n\r\n\r\nexport default Crawling","\r\nimport React, { Component } from 'react';\r\n\r\n//tutaj trzeba zaimportować zmienne z tego pliku\r\nimport {LinkInput, parsedPage} from '../LinkPage/LinkInput'\r\n\r\n//tutaj będzie kiedyś wyświetlanie\r\nclass ExternalHtml extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hits: [],\r\n    };\r\n  }\r\n  \r\n  render() {\r\n    //const { hits } = this.state;\r\n    return (\r\n      parsedPage\r\n      /*\r\n      <ul>\r\n        {hits.map(hit =>\r\n          <li key={hit.objectID}>\r\n            <a href={hit.url}>{hit.title}</a>\r\n          </li>\r\n        )}\r\n      </ul>\r\n      */\r\n    );\r\n  }\r\n\r\n}\r\nexport default ExternalHtml;\r\n\r\n\r\n/*\r\noryginalne:\r\n\r\nimport React, { Component } from 'react';\r\n\r\nconst API = 'https://hn.algolia.com/api/v1/search?query=';\r\nconst DEFAULT_QUERY = 'redux';\r\n\r\nclass ExternalHtml extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hits: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(API + DEFAULT_QUERY)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ hits: data.hits }));\r\n  }\r\n  \r\n  render() {\r\n    const { hits } = this.state;\r\n    return (\r\n      <ul>\r\n        {hits.map(hit =>\r\n          <li key={hit.objectID}>\r\n            <a href={hit.url}>{hit.title}</a>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n}\r\nexport default ExternalHtml;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nclass ExternalHtml extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch('https://api.mydomain.com')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ data }));\r\n  }\r\n  render(){\r\n      return(\r\n          <div>haha</div>\r\n      )\r\n  }\r\n}\r\nexport default ExternalHtml;\r\n*/","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import serviceWorker from ''\r\nimport Crawling from './Crawling'\r\nimport './Crawling.css';\r\n\r\n\r\nfunction IndexCrawling() {\r\n    return(\r\n        ReactDOM.render(<Crawling />, document.getElementById('root'))\r\n        )\r\n}\r\n\r\nexport default IndexCrawling\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport Header from \"./components/Header\"\r\nimport Footer from \"./components/Footer\"\r\nimport LoginMainContent from \"./components/LoginPage/LoginMainContent\"\r\nimport LinkMainContent from './components/ContentPages/LinkPage/LinkMainContent';\r\nimport MyAccountMainContent from './components/ContentPages/MyAccountPage/MyAccountMainContent';\r\nimport MyCrawlsMainContent from './components/ContentPages/MyCrawlsPage/MyCrawlsMainContent';\r\nimport IndexCrawling from './components/ContentPages/CrawlingPage/IndexCrawling';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <body>\r\n        <center>\r\n          <div className='background'>\r\n          <Header />\r\n\r\n          {/* \r\n          A <Switch> looks through its children <Route>s and\r\n          renders the first one that matches the current URL. \r\n          */}\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={LoginMainContent} />  \r\n              <Route path=\"/new-crawl\" component={LinkMainContent} />\r\n              <Route path=\"/start-crawling\" component={IndexCrawling} />\r\n              <Route path=\"/my-account\" component={MyAccountMainContent} />\r\n              <Route path=\"/my-crawls\" component={MyCrawlsMainContent} />\r\n            </Switch>\r\n          </Router> \r\n\r\n          <Footer />\r\n          </div>\r\n        </center>\r\n      </body>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}