{"version":3,"sources":["media/logo.png","media/404-cat.png","components/LoginRegisterPage/Login.js","components/LoginRegisterPage/Register.js","components/LoginRegisterPage/LoginRegisterPanel.js","components/Header.js","components/Footer.js","components/LoginRegisterPage/LoginRegisterContentBox.js","components/ContentPages/NewCrawlPage/NewCrawl.js","components/ContentPages/NewCrawlPage/AddingScripts.js","components/ContentPages/NewCrawlPage/NewCrawlNavbar.js","components/ContentPages/NewCrawlPage/NewCrawlContentBox.js","components/ContentPages/MyAccountPage/MyAccountNavbar.js","components/ContentPages/MyAccountPage/MyAccount.js","components/ContentPages/MyAccountPage/MyAccountContentBox.js","components/ContentPages/MyCrawlsPage/MyCrawlsNavbar.js","components/ContentPages/MyCrawlsPage/MyCrawls.js","components/ContentPages/MyCrawlsPage/MyCrawlsContentBox.js","components/ContentPages/CrawlingPage/ExternalHtml.js","components/ContentPages/CrawlingPage/TopBanner.js","components/ContentPages/CrawlingPage/RenderBanner.js","components/ContentPages/CrawlingPage/Crawling.js","components/ContentPages/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LoginBox","props","state","e","className","htmlFor","type","name","placeholder","to","onClick","this","submitLogin","bind","React","Component","MyTextInput","label","useField","field","meta","id","touched","error","MyCheckbox","children","RegisterBox","username","password","email","acceptedTerms","errors","initialValues","confirmPassword","validationSchema","Yup","max","required","min","oneOf","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","Panel","isLoginOpen","isRegisterOpen","setState","showLoginBox","showRegisterBox","Login","Register","Header","src","logo","alt","Footer","LoginContentBox","LoginRegisterPanel","NewCrawl","submitForm","a","preventDefault","console","log","isSubmitting","url","link","toString","fetch","method","body","headers","res","json","data","hasOwnProperty","message","isError","success","parsedPage","html","parsedPageToExport","handleInputChange","target","value","FormControl","style","width","variant","pattern","hidden","OutlinedInput","onChange","marginBottom","FormHelperText","marginLeft","Button","color","pathname","externalPageToRender","disableElevation","colors","ExampleMenu","activeItem","window","location","assign","Menu","widths","size","Item","active","moveToNewCrawl","moveToMyCrawls","moveToMyAccount","Logout","MenuExampleColoredMenus","menus","map","key","NewCrawlContentBox","MyAccount","MyAccountContentBox","MyCrawls","MyCrawlsContentBox","ExternalHtml","takeExternalPageToRender","useLocation","title","srcDoc","allow","importance","referrerPolicy","sandbox","frameBorder","TopBanner","sendState","borderState","Callback","x","xpathFromParent","xpath","sleep","period","ms","Promise","resolve","height","defaultChecked","paddingTop","TextField","InputLabel","Select","labelId","MenuItem","startIcon","RenderBanner","takeUrl","Crawling","callbackFunction","borderSwitchState","document","getElementById","contentWindow","TurnOffBordering","UpdateBorders","xpathIframe","TakeXpath","MyCrawlsMainContent","forceRefresh","App","exact","strict","path","component","LoginRegisterContentBox","NotFoundPage","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b739bac2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fe41c8fe.png\";","module.exports = __webpack_public_path__ + \"static/media/404-cat.3eba6875.png\";","import React from \"react\"\nimport { Link } from \"react-router-dom\";\n\n\nclass LoginBox extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {};\n    }\n  \n    submitLogin(e) {}\n  \n    render() {\n      return (\n        <div className=\"inner-container\">\n          <div className=\"box\">\n  \n            <div className=\"input-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                className=\"login-input\"\n                placeholder=\"Username\"/>\n            </div>\n  \n            <div className=\"input-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"login-input\"\n                placeholder=\"Password\"/>\n            </div>\n   \n                <Link to=\"/new-crawl\"> \n                  <button\n                    type=\"button\"\n                    className=\"login-btn\"\n                    onClick={this\n                    .submitLogin\n                    .bind(this)}>Login</button>\n                </Link>\n\n          </div>\n        </div>\n      );\n    }\n  \n  } \n\n  export default LoginBox\n ","import React from \"react\"\nimport { Formik, Form, useField } from \"formik\";\nimport * as Yup from \"yup\";\n\n\n\nconst MyTextInput = ({ label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <input className=\"text-input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst MyCheckbox = ({ children, ...props }) => {\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\n  return (\n    <>\n      <label className=\"checkbox\">\n        <input {...field} {...props} type=\"checkbox\" />\n        {children}\n      </label>\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\n\nconst MySelect = ({ label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <div htmlFor={props.id || props.name}>{label}</div>\n      <div {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div>{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nclass RegisterBox extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"ss\",\n      email: \"\",\n      acceptedTerms: false,\n      errors: {\n        username: '',\n        email: '',\n        password: '',\n      }\n      \n    };\n    \n  }\n  \n  render() {\n    const {errors} = this.state;\n    return (\n        <div className=\"inner-container\">\n          \n          <div className=\"box\">\n\n          <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n          acceptedTerms: false, // added for our checkbox\n        }}\n        validationSchema={Yup.object({\n          password: Yup.string()\n            .max(30, \"Must be 30 characters or less\")\n            .required(\"Password required\")\n            .min(8, \"Minimum length 8\"),\n            confirmPassword: Yup.string()\n            .required(\"Password required\")\n            .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n          email: Yup.string()\n            .email(\"Invalid email address\")\n            .required(\"Email required\"),\n          acceptedTerms: Yup.boolean()\n            .required(\"Required\")\n            .oneOf([true], \"You must accept the terms and conditions\"),\n        })}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        <div className=\"scroll\">\n        <Form>\n        <div className=\"input-group\">\n        <MyTextInput\n            label=\"Email Address\"\n            type='email' \n            name='email' \n            className=\"login-input\" \n            placeholder=\"Email\"\n          />\n          <MyTextInput\n            label=\"Password\"\n            type='password' \n            name='password' \n            className=\"login-input\"\n            placeholder=\"Password\"\n          />\n          <MyTextInput\n            label=\"Confirm password\"\n            type='password' \n            name='confirmPassword' \n            className=\"login-input\"\n            placeholder=\"Password\"\n          />\n          <MyCheckbox name=\"acceptedTerms\">\n            I accept the terms and conditions\n          </MyCheckbox>\n\n          <button className=\"login-btn\" type=\"submit\">Submit</button>\n          </div>\n        </Form>\n        </div>\n      </Formik>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  export default RegisterBox","import React from \"react\"\nimport Login from \"./Login\"\nimport Register from \"./Register\"\n\nclass Panel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          isLoginOpen: true,\n          isRegisterOpen: false\n        };\n    }\n\n     showLoginBox() {\n        this.setState({isLoginOpen: true, isRegisterOpen: false});\n        }\n        \n     showRegisterBox() {\n        this.setState({isRegisterOpen: true, isLoginOpen: false});\n        }\n\n        render() {\n            return (\n                <div className=\"root-container\">\n                  <div className=\"box-controller\">\n                      <div\n                          className={\"controller \" + (this.state.isLoginOpen\n                          ? \"selected-controller\"\n                          : \"\")}\n                          onClick={this\n                          .showLoginBox\n                          .bind(this)}>\n                          Login\n                      </div>\n                      <div\n                          className={\"controller \" + (this.state.isRegisterOpen\n                          ? \"selected-controller\"\n                          : \"\")}\n                          onClick={this\n                          .showRegisterBox\n                          .bind(this)}>\n                          Register\n                      </div>\n                  </div>\n                  <div className=\"box-container\">\n                  {this.state.isLoginOpen && <Login />}\n                  {this.state.isRegisterOpen && <Register />}\n                  </div>\n              </div>\n            );\n        }\n      \n}\n\nexport default Panel  ","import React from \"react\"\n\nimport logo from '../media/logo.png';\n\nfunction Header() {\n    return (\n        <header className=\"AppHeader\">\n            <img src={logo} className=\"AppLogo\" alt=\"logo\" />\n        </header>\n    )\n}\n\nexport default Header","import React from \"react\"\n\nfunction Footer() {\n    return (\n        <footer className=\"Footer\">\n            <text className=\"Footer-text\">\n                Innovative Projects Summer - Wrocław 2020\n            </text>      \n        </footer>\n    )\n}\n\nexport default Footer","import React from \"react\"\nimport LoginRegisterPanel from \"./LoginRegisterPanel\"\nimport Header from '../Header'\nimport Footer from '../Footer'\n\nfunction LoginContentBox() {\n    return (\n        <div>\n            <center>\n            <div className='background'>\n                <Header />\n                    <main className=\"MainContent\">\n                    <LoginRegisterPanel />\n                    </main>\n                <Footer />\n            </div>\n            </center>\n        </div>\n    )\n}\n\nexport default LoginContentBox","import React, {Component} from \"react\"\nimport { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { AddingScripts } from \"./AddingScripts.js\"\n\n\nclass NewCrawl extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: {\n        link: \"\",\n      },\n      parsedPageToExport: \"\",\n      isSubmitting: false,\n      isError: false\n    };\n  }\n\nsubmitForm = async e => {\n    e.preventDefault();\n    console.log(this.state);\n    this.setState({ isSubmitting: true });\n\n    //communication with backend\n    const url = {\n      url: this.state.values.link.toString()\n    };\n    const res = await fetch(\"/api/v1/page\", {\n      method: \"POST\",\n      body: JSON.stringify(url),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    });\n\n    this.setState({ isSubmitting: false });\n    let data = await res.json();\n    !data.hasOwnProperty(\"error\")\n      ? this.setState({ message: data.success })\n      : this.setState({ message: data.error, isError: true });\n    data = {\n      parsedPage: data.html\n    };\n\n    data.parsedPage = data.parsedPage + AddingScripts \n\n//setting parsed code received from backend to the variable, which will be exported\nthis.setState({parsedPageToExport: data.parsedPage}) \n\n/* automatic redirecting - not work yet\n    const redirect = () => {\n      return(\n        <Link to={{\n          pathname: \"/new-crawl/start-crawling\",\n          state: {\n            externalPageToRender: this.state.parsedPageToExport,\n          }\n        }}>\n          {window.location.replace(\"./new-crawl/start-crawling\")}\n        </Link>\n      );\n    }  \n*/\n\n    setTimeout(\n      () => {\n        this.setState({\n          isError: false,\n          message: \"\",\n        })\n        //redirect();\n      },\n      1000\n    );\n\n  };\n\n  handleInputChange = e =>\n    this.setState({\n      values: { ...this.state.values, [e.target.name]: e.target.value }\n    });\n\n  render() {\n    return (\n      <div>\n      <div className=\"PageContent\">\n        <form onSubmit={this.submitForm}>\n            <h1>Paste your link below</h1>\n            <FormControl style={{ width: '40ch'}} variant=\"outlined\">\n              <input value={this.state.values.link} pattern=\"https?://.+\" hidden=\"true\"></input>\n              <OutlinedInput\n                type=\"text\"\n                name=\"link\"\n                id=\"linkInput\"\n                value={this.state.values.link}\n                onChange={this.handleInputChange}\n                style={{ marginBottom: '0px' }}  \n                required\n              />\n                <FormHelperText style={{ marginLeft: \"-25px\", width: '500px'}} id=\"helper-text\">\n                    Remember, that your link should start with \"http://\" or \"https://\".\n                </FormHelperText> \n\n            </FormControl>\n\n            <div>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" id=\"linkSubmit\">STEP 1: Submit website</Button>\n            </div> \n      \n        </form>\n\n        <div className={`message ${this.state.isError && \"error\"}`}>\n          {this.state.isSubmitting ? \"Please wait...\" : this.state.message}\n        </div>\n\n        <Link to={{\n          pathname: \"/new-crawl/start-crawling\",\n          state: {\n            externalPageToRender: this.state.parsedPageToExport,\n            url: this.state.values.link\n          }\n        }}>\n          <Button variant=\"contained\" color=\"primary\" disableElevation >STEP 2: Go to website</Button>\n        </Link>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default NewCrawl\n","const AddingScripts = `\n<script type='text/javascript'>\n\nwindow.onload=function() {\n  var anchors = document.getElementsByTagName('a');\n  for(var i=anchors.length-1;i>=0;i--){\n  anchors[i].onclick=function() { return false }\n  }}\n\n  \nvar outer = document.createElement(\"div\");\nouter.setAttribute(\"id\", \"outer\");\nouter.setAttribute(\"class\", \"outer\");\ndocument.body.appendChild(outer);\nouter.style.background = 'rgba(37, 172, 131, 0.2)';\nouter.style.position = 'absolute';\nouter.style.zIndex = 65000000;\n\n\nvar selector = document.createElement(\"div\");\nselector.setAttribute(\"id\", \"selector\");\ndocument.body.appendChild(selector);\nselector.style.borderStyle  = \"solid\";\nselector.style.borderWidth  = \"3px\";\nselector.style.borderColor  = \"blue\";\nselector.style.position = 'absolute';\nselector.style.zIndex = 65000000;\nselector.style.pointerEvents = \"none\";\nselector.style.transition = 'all 300ms ease';\n\n\nvar TurnOffBordering = 1;\n\nvar xpathIframe = 5;\n\nfunction drawBorder(e) {\n\n  if (TurnOffBordering == 0) {\n    return;\n  }\n\n\n  var target = e.target;\n\n  if (target.id === \"selector\" ) return;\n\n      selector.style.display = 'block';\n\n  var targetRect = target.getBoundingClientRect();\n\n  selector.style.display = \"block\";\n  selector.style.width = targetRect.width + \"px\";\n  selector.style.height = targetRect.height + \"px\";\n  selector.style.left = targetRect.left + \"px\";\n  selector.style.top = targetRect.top + window.scrollY + \"px\";\n}\n\nfunction UpdateBorders() {\n  selector.style.display = 'none';\n  outer.style.display = \"none\";\n}\n\nfunction removeHighlight(e) {\n  var target = e.target;\n  if (target && target.className === \"outer\") {\n    outer.style.display = \"none\";\n  }\n}\n\nfunction select(e) {\n  \n\n  if (TurnOffBordering == 0) {\n    return;\n  }\n\n  var target = e.target;\n\n  if (target.id == \"outer\" || \n  target.id == \"selector\") return;\n\n\n  getElementXPath(e);\n\n  var targetRect = target.getBoundingClientRect();\n\n  outer.style.display = \"block\";\n  outer.style.width = targetRect.width + \"px\";\n  outer.style.height = targetRect.height + \"px\";\n  outer.style.left = targetRect.left + \"px\";\n  outer.style.top = targetRect.top + window.scrollY + \"px\";\n\n  console.log(\"xpath: \"+ xpathIframe)\n}\n\nfunction getElementTreeXPath(element) {\n  var paths = [];\n  var target = element.target;\n\n  for (; target && target.nodeType === 1; target = target.parentNode) {\n    var index = 0;\n    // EXTRA TEST FOR target.ID\n    if (target && target.id) {\n      paths.splice(0, 0, '/*[@id=\"' + target.id + '\"]');\n      break;\n    }\n\n    for (var sibling = target.previousSibling; sibling; sibling = sibling.previousSibling) {\n      // Ignore document type declaration.\n      if (sibling.nodeType === Node.DOCUMENT_TYPE_NODE)\n        continue;\n\n      if (sibling.nodeName === target.nodeName)\n        ++index;\n\n    }\n\n    var tagName = target.nodeName.toLowerCase();\n    var pathIndex = (index ? \"[\" + (index + 1) + \"]\" : \"\");\n    paths.splice(0, 0, tagName + pathIndex);\n  }\n\n  xpathIframe = paths.length ? \"/\" + paths.join(\"/\") : null;\n  return paths.length ? \"/\" + paths.join(\"/\") : null;\n};\n\nfunction getElementXPath(element) {\n  var target = element.target;\n\n  if (target && target.id){\n    xpathIframe = '//*[@id=\"' + target.id + '\"]'\n    return '//*[@id=\"' + target.id + '\"]';\n  }\n  else\n    return getElementTreeXPath(element);\n};\n\n\n  window.addEventListener('click', removeHighlight);\n  window.addEventListener('mousemove', drawBorder);\n  window.addEventListener('click', select);\n\n\n</script>`\n\nexport { AddingScripts };","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport \"../../../css/navbar.css\"\n\nconst colors = [\n  'blue',\n]\nclass ExampleMenu extends Component {\n  static propTypes = {\n    color: PropTypes.string,\n  }\n\n  state = { activeItem: 'New Crawl' }\n\n  moveToMyAccount() {\n    window.location.assign(\"./my-account\")\n  }\n  moveToNewCrawl() {\n    window.location.assign(\"./new-crawl\")\n  }\n  moveToMyCrawls() {\n    window.location.assign(\"./my-crawls\")\n  }\n  Logout() {\n    window.location.assign(\"./\")\n  }\n\n  render() {\n    const { color } = this.props\n    const { activeItem } = this.state\n\n    return (\n      <div className=\"navbar\">\n      <Menu color={color} widths={4} size=\"small\">\n        <Menu.Item\n          name='New Crawl'\n          active={activeItem === 'New Crawl'}\n          onClick={this.moveToNewCrawl}\n        />\n        <Menu.Item\n          name='My Crawls'\n          active={activeItem === 'My Crawls'}\n          onClick={this.moveToMyCrawls}\n        />\n        <Menu.Item\n          name='My Account'\n          active={activeItem === 'My Account'}\n          onClick={this.moveToMyAccount}\n        />\n        <Menu.Item\n          name='Logout'\n          active={activeItem === 'Logout'}\n          onClick={this.Logout}\n        />\n      </Menu>\n      </div>\n    )\n  }\n}\n\nconst MenuExampleColoredMenus = () => {\n  const menus = colors.map((color) => <ExampleMenu color={color} key={color} />)\n\n  return <div>{menus}</div>\n}\n\nexport default MenuExampleColoredMenus\n","import React from \"react\"\nimport NewCrawl from './NewCrawl'\nimport Navbar from './NewCrawlNavbar'\nimport Header from '../../Header'\nimport Footer from '../../Footer'\n\n\n\nfunction NewCrawlContentBox() {\n    return (\n        <div>\n            <center>\n            <div className='background'>\n                <Header />\n                    <main className=\"MainContent\">\n                    <NewCrawl/>\n                    <Navbar />\n                    </main>\n                <Footer />\n            </div>\n            </center>\n        </div>\n    )\n}\n\nexport default NewCrawlContentBox","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport \"../../../css/navbar.css\"\n\nconst colors = [\n  'blue',\n]\nclass ExampleMenu extends Component {\n  static propTypes = {\n    color: PropTypes.string,\n  }\n\n  state = { activeItem: 'My Account' }\n\n  moveToMyAccount() {\n    window.location.assign(\"./my-account\")\n  }\n  moveToNewCrawl() {\n    window.location.assign(\"./new-crawl\")\n  }\n  moveToMyCrawls() {\n    window.location.assign(\"./my-crawls\")\n  }\n  Logout() {\n    window.location.assign(\"./\")\n  }\n\n  render() {\n    const { color } = this.props\n    const { activeItem } = this.state\n\n    return (\n      <div className=\"navbar\">\n      <Menu color={color} widths={4} size=\"small\">\n        <Menu.Item\n          name='New Crawl'\n          active={activeItem === 'New Crawl'}\n          onClick={this.moveToNewCrawl}\n        />\n        <Menu.Item\n          name='My Crawls'\n          active={activeItem === 'My Crawls'}\n          onClick={this.moveToMyCrawls}\n        />\n        <Menu.Item\n          name='My Account'\n          active={activeItem === 'My Account'}\n          onClick={this.moveToMyAccount}\n        />\n        <Menu.Item\n          name='Logout'\n          active={activeItem === 'Logout'}\n          onClick={this.Logout}\n        />\n      </Menu>\n      </div>\n    )\n  }\n}\n\nconst MenuExampleColoredMenus = () => {\n  const menus = colors.map((color) => <ExampleMenu color={color} key={color} />)\n\n  return <div>{menus}</div>\n}\n\nexport default MenuExampleColoredMenus\n","import React from \"react\"\n\nfunction MyAccount() {\n    return (\n        <div className=\"PageContent\">\n            \n        </div>\n)\n}\n\nexport default MyAccount","import React from \"react\"\nimport Navbar from './MyAccountNavbar.js'\nimport Header from '../../Header'\nimport Footer from '../../Footer'\nimport MyAccount from \"./MyAccount.js\"\n\nfunction MyAccountContentBox() {\n    return (\n        <div>\n        <center>\n        <div className='background'>\n            <Header />\n                <main className=\"MainContent\">\n                    <MyAccount />\n                    <Navbar />\n                </main>\n            <Footer />\n        </div>\n        </center>\n    </div>\n)\n}\n\nexport default MyAccountContentBox","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport \"../../../css/navbar.css\"\n\nconst colors = [\n  'blue',\n]\nclass ExampleMenu extends Component {\n  static propTypes = {\n    color: PropTypes.string,\n  }\n\n  state = { activeItem: 'My Crawls' }\n\n  moveToMyAccount() {\n    window.location.assign(\"./my-account\")\n  }\n  moveToNewCrawl() {\n    window.location.assign(\"./new-crawl\")\n  }\n  moveToMyCrawls() {\n    window.location.assign(\"./my-crawls\")\n  }\n  Logout() {\n    window.location.assign(\"./\")\n  }\n\n  render() {\n    const { color } = this.props\n    const { activeItem } = this.state\n\n    return (\n      <div className=\"navbar\">\n      <Menu color={color} widths={4} size=\"small\">\n        <Menu.Item\n          name='New Crawl'\n          active={activeItem === 'New Crawl'}\n          onClick={this.moveToNewCrawl}\n        />\n        <Menu.Item\n          name='My Crawls'\n          active={activeItem === 'My Crawls'}\n          onClick={this.moveToMyCrawls}\n        />\n        <Menu.Item\n          name='My Account'\n          active={activeItem === 'My Account'}\n          onClick={this.moveToMyAccount}\n        />\n        <Menu.Item\n          name='Logout'\n          active={activeItem === 'Logout'}\n          onClick={this.Logout}\n        />\n      </Menu>\n      </div>\n    )\n  }\n}\n\nconst MenuExampleColoredMenus = () => {\n  const menus = colors.map((color) => <ExampleMenu color={color} key={color} />)\n\n  return <div>{menus}</div>\n}\n\nexport default MenuExampleColoredMenus","import React from \"react\"\n\nfunction MyCrawls() {\n    return (\n        <div className=\"PageContent\">\n            \n        </div>\n)\n}\n\nexport default MyCrawls","import React from \"react\"\nimport Navbar from './MyCrawlsNavbar.js'\nimport Header from '../../Header'\nimport Footer from '../../Footer'\nimport MyCrawls from \"./MyCrawls.js\"\n\nfunction MyCrawlsContentBox() {\n    return (\n        <div>\n        <center>\n        <div className='background'>\n            <Header />\n                <main className=\"MainContent\">\n                    <MyCrawls />\n                    <Navbar />\n                </main>\n            <Footer />\n        </div>\n        </center>\n    </div>\n    )\n}\n\nexport default MyCrawlsContentBox","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\n//rendering external html\nfunction ExternalHtml() {\n\n  const takeExternalPageToRender =  useLocation();\n\n  return (\n    <div>\n      <iframe\n        title=\"pageFrame\"\n        id=\"pageFrame\"\n        name=\"pageFrame\"\n        src={takeExternalPageToRender.state.externalPageToRender}\n        srcDoc={takeExternalPageToRender.state.externalPageToRender}\n        allow=\"fullscreen\"\n        importance=\"high\"\n        referrerPolicy=\"unsafe-url\"\n        sandbox=\"allow-popups allow-scripts allow-same-origin\"\n        frameBorder=\"100\"\n      />\n\n      {/* old way\n      <div dangerouslySetInnerHTML={{ __html: takeExternalPageToRender.state.externalPageToRender }} /> \n      */}\n\n    </div>\n  );\n\n}\nexport default ExternalHtml;","import React from 'react';\nimport logo from '../../../media/logo.png'\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nclass TopBanner extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: {\n        email: \"\",\n        period: \"\",\n        xpath: \"\",\n        value: \"not supported\",\n        url: this.props.url\n      },\n      isSubmitting: false,\n      isError: false\n    };\n  }\n\n  sendState = () => {\n    if (this.props.borderState)\n    this.props.Callback(0);\n    else \n    this.props.Callback(1);\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      values: { ...this.state.values, [e.target.name]: e.target.value }\n    });\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  submitForm = async e => {\n    e.preventDefault();\n\n    //setting xpath\n    var x = this.props.xpathFromParent();\n    console.log(\"Wysyłany xpath: \"+ x);\n    this.setState({\n      values: { ...this.state.values, xpath: x }\n    })\n\n    this.setState({ isSubmitting: true });\n\n    await this.sleep(2000);\n\n    ///////////// what will be send to backend\n    console.log(JSON.stringify(this.state.values))\n    /////////////\n\n    //start communication with backend\n    const res = await fetch(\"/api/v1/crawling-data\", {\n      method: \"POST\",\n      body: JSON.stringify(this.state.values),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    });\n\n    ////////////// what has been sent to backend \n    console.log(JSON.stringify(this.state.values))\n    //////////////\n\n    this.setState({ isSubmitting: false });\n\n    const data = await res.json();\n    !data.hasOwnProperty(\"error\")\n      ? this.setState({ message: data.success })\n      : this.setState({ message: data.error, isError: true });\n\n\n    setTimeout(\n      () => {\n        this.setState({\n          isError: false,\n        })\n      },\n      1600\n    );\n  }\n\n  render() {\n\n    return(\n      <div id='CrawlingBanner' >\n          \n      <div className='Logo'>\n        <div className ='elements'>\n          <img src={logo} alt=\"logo\" height=\"40\" width=\"167\" />\n        </div>\n      </div>\n      \n      \n      <div className='Status'>\n        <div className ='elements'>\n          <text className=\"textLeft\">Recording is</text><text className=\"textRight\"> ON</text>\n        </div>\n      </div>\n\n\n      <div className='Bordering'>\n        <div className='elements'>\n        Bordering\n        <br></br>\n        <div className=\"toggle-switch\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle-switch-checkbox\"\n          name=\"toggleSwitch\"\n          id=\"toggleSwitch\"\n          onChange={this.sendState}\n          defaultChecked\n        />\n        <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitch\">\n          <span className=\"toggle-switch-inner\" />\n          <span className=\"toggle-switch-switch\" />\n        </label>\n      </div>\n      </div>\n      </div>\n\n\n\n<form onSubmit={this.submitForm}>\n\n      <div className='EmailInput'>\n        <div className ='elements'>\n        <FormControl id=\"crawlingForm\" style={{ width:'30ch', paddingTop:'8px'}} onSubmit={this.submitForm} >\n\n          <TextField \n            size=\"small\"\n            id=\"filled-email\" \n            label=\"E-mail\" \n            type=\"text\" \n            name=\"email\"\n            variant=\"filled\" \n            onChange={this.handleInputChange}\n            value={this.state.values.email}\n            required\n          />\n        </FormControl>  \n        </div>\n      </div>\n\n      <div className='NotificationFreq'>\n        <div className ='elements'>\n        <FormControl variant=\"filled\" id=\"crawlingForm\" style={{ width: '25ch', paddingTop:'8px'}} size=\"small\">\n          <InputLabel id=\"simple-select-outlined-label\" style={{  paddingTop:'8px' }}>Notification frequency</InputLabel>\n   \n            <Select\n              labelId=\"simple-select-outlined-label\"\n              id=\"simple-select-outlined\"\n              name=\"period\"\n              value={this.state.values.period}\n              onChange={this.handleInputChange}\n              label=\"period\"\n              required=\"true\"\n            >\n              <MenuItem value=\"\">\n                <em>Choose one...</em>\n              </MenuItem>\n              <MenuItem value={1/360}>10sec</MenuItem>\n              <MenuItem value={1/60}>1min</MenuItem>\n              <MenuItem value={1/6}>10min</MenuItem>\n              <MenuItem value={0.5}>0.5h</MenuItem>\n              <MenuItem value={1}>1h</MenuItem>\n              <MenuItem value={6}>6h</MenuItem>\n              <MenuItem value={12}>12h</MenuItem>\n              <MenuItem value={24}>24h</MenuItem>\n            </Select>\n        </FormControl>\n        </div>\n      </div>\n\n      <div className='SubmitButton'>\n        <div className ='elements'>\n          <FormControl id=\"crawlingForm\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<CloudUploadIcon />}\n              type=\"submit\"\n            >\n              Submit\n            </Button>\n          </FormControl>\n        </div>\n      </div>\n      \n</form>  \n\n\n      {/*\n      <div className='xPaths'>\n        <div className ='elements'>\n          <text id=\"status\">Wait for it... or enable JavaScript.</text>\n          <br /><text id=\"status2\">Wait for it... or enable JavaScript.</text>\n        </div>\n      </div>\n      */}\n\n    </div>\n    )\n  }\n}\n\nexport default TopBanner","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport TopBanner from './TopBanner';\n\n\n//this functional component has been created to get access to url in TopBanner.js\nfunction RenderBanner(props) {\n\n  const takeUrl =  useLocation();\n\n  return (\n      <TopBanner Callback={props.Callback} borderState={props.borderState} xpathFromParent={props.xpathFromParent} url={takeUrl.state.url} />\n  );\n}\nexport default RenderBanner;\n\n","import React from 'react';\nimport ExternalHtml from './ExternalHtml';\nimport '../../../css/Crawling.css';\nimport RenderBanner from './RenderBanner';\n\n\n\nclass Crawling extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"Click here\",\n      xpath: \"\"\n    };\n    this.state = { borderState: 0 };\n  }\n\n  callbackFunction = (borderSwitchState) => {\n    this.setState({ borderState: borderSwitchState });\n    console.log(this.state.borderState)\n    document.getElementById(\"pageFrame\").contentWindow.TurnOffBordering = this.state.borderState;\n    document.getElementById(\"pageFrame\").contentWindow.UpdateBorders();\n  };\n\n  TakeXpath (){\n    let takeXpath = document.getElementById(\"pageFrame\").contentWindow.xpathIframe;\n    return takeXpath\n  }\n\n  render() {\n    return (\n      <div>\n        <RenderBanner Callback={this.callbackFunction} borderState={this.state.borderState} xpathFromParent={this.TakeXpath} />\n        <div id='Content'>\n          {/* <button onClick={this.TakeXpath}>Check xPath!</button> */}\n          <ExternalHtml />          \n        </div>\n      </div>\n    \n    );\n  }\n}\n\n\nexport default Crawling;","import React from \"react\"\nimport Header from '../Header'\nimport Footer from '../Footer'\nimport Button from '@material-ui/core/Button';\nimport error from '../../media/404-cat.png'\n\nimport {BrowserRouter as Router, Switch, Link} from \"react-router-dom\";\n\nfunction MyCrawlsMainContent() {\n    return (\n        <div>\n        <center>\n        <div className='background'>\n            <Header />\n                <main className=\"MainContent\">\n                <div className=\"PageContent\">\n                    <h2>I'm really sorry, but this page doesn't exist</h2>\n                    <img src={error} height=\"170px\" width=\"150px\" alt=\"how dare you?\" />\n                    <h4>Go back to the right path by clicking button below...</h4>\n                    <Router forceRefresh={true}><Switch><Link to=\"/\"><Button variant=\"contained\" color=\"primary\">Cats are better than dogs!</Button></Link></Switch></Router>\n                 </div>\n                </main>\n            <Footer />\n        </div>\n        </center>\n    </div>\n    )\n}\n\nexport default MyCrawlsMainContent","import React from 'react';\nimport './css/App.css';\nimport LoginRegisterContentBox from \"./components/LoginRegisterPage/LoginRegisterContentBox\"\nimport NewCrawlContentBox from './components/ContentPages/NewCrawlPage/NewCrawlContentBox';\nimport MyAccountContentBox from './components/ContentPages/MyAccountPage/MyAccountContentBox';\nimport MyCrawlsContentBox from './components/ContentPages/MyCrawlsPage/MyCrawlsContentBox';\nimport Crawling from './components/ContentPages/CrawlingPage/Crawling';\nimport NotFoundPage from './components/ContentPages/NotFoundPage';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n      <body>\n          {/* \n          A <Switch> looks through its children <Route>s and\n          renders the first one that matches the current URL. \n          */}\n          <Router>\n            <Switch>\n              <Route exact strict path=\"/\" component={LoginRegisterContentBox} />  \n              <Route exact strict path=\"/new-crawl\" component={NewCrawlContentBox} />\n              <Route path=\"/new-crawl/start-crawling\" component={Crawling} />\n              <Route exact strict path=\"/my-account\" component={MyAccountContentBox} />\n              <Route exact strict path=\"/my-crawls\" component={MyCrawlsContentBox} />\n              <Route exact strict path=\"/404\" component={NotFoundPage} />\n              <Redirect to=\"/404\" />\n            </Switch>\n          </Router> \n      </body>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}