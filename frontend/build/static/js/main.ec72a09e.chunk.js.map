{"version":3,"sources":["media/logo.png","components/ContentPages/CrawlingPage/logo.png","media/404-cat.png","components/LoginPage/LoginBox.js","components/LoginPage/RegisterBox.js","components/LoginPage/LoginPanel.js","components/Header.js","components/Footer.js","components/LoginPage/LoginMainContent.js","components/ContentPages/LinkPage/LinkInput.js","components/ContentPages/LinkPage/LinkNavbar.js","components/ContentPages/LinkPage/LinkMainContent.js","components/ContentPages/MyAccountPage/MyAccountNavbar.js","components/ContentPages/MyAccountPage/MyAccount.js","components/ContentPages/MyAccountPage/MyAccountMainContent.js","components/ContentPages/MyCrawlsPage/MyCrawlsNavbar.js","components/ContentPages/MyCrawlsPage/MyCrawls.js","components/ContentPages/MyCrawlsPage/MyCrawlsMainContent.js","components/ContentPages/CrawlingPage/TopBanner.js","components/ContentPages/CrawlingPage/ExternalHtml.js","components/ContentPages/CrawlingPage/Crawling.js","components/ContentPages/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LoginBox","props","state","e","className","htmlFor","type","name","placeholder","to","onClick","this","submitLogin","bind","React","Component","MyTextInput","label","useField","field","meta","id","touched","error","MyCheckbox","children","RegisterBox","username","password","email","acceptedTerms","errors","initialValues","confirmPassword","validationSchema","Yup","max","required","min","oneOf","onSubmit","values","setSubmitting","setTimeout","alert","JSON","stringify","LoginPanel","isLoginOpen","isRegisterOpen","setState","showLoginBox","showRegisterBox","Header","src","logo","alt","Footer","LoginMainContent","LinkInput","submitForm","a","preventDefault","console","log","isSubmitting","url","link","toString","fetch","method","body","headers","res","json","data","hasOwnProperty","message","isError","success","parsedPage","html","parsedPageToExport","handleInputChange","target","value","FormControl","style","width","variant","pattern","hidden","OutlinedInput","onChange","marginBottom","FormHelperText","marginLeft","Button","color","pathname","externalPageToRender","disableElevation","colors","ExampleMenu","activeItem","window","location","assign","Menu","widths","size","Item","active","moveToNewCrawl","moveToMyCrawls","moveToMyAccount","Logout","MenuExampleColoredMenus","menus","map","key","LinkContent","MyAccount","LinkMainContent","MyCrawls","MyCrawlsMainContent","takeLink","useLocation","TopBanner","sendState","borderState","Callback","x","xpathFromParent","xpath","period","height","defaultChecked","paddingTop","TextField","InputLabel","Select","labelId","MenuItem","startIcon","ExternalHtml","takeExternalPageToRender","srcDoc","allow","importance","referrerPolicy","sandbox","frameBorder","getElementXPath","element","paths","nodeType","parentNode","index","splice","sibling","previousSibling","Node","DOCUMENT_TYPE_NODE","nodeName","tagName","toLowerCase","pathIndex","length","join","getElementTreeXPath","currentElement","HelpElements","class","document","addEventListener","setInterval","$","text","Crawling","callbackFunction","borderSwitchState","getElementById","contentWindow","TurnOffBordering","UpdateBorders","title","xpathIframe","TakeXpath","forceRefresh","App","exact","strict","path","component","MyAccountMainContent","NotFoundPage","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ec72a09e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fe41c8fe.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.fe41c8fe.png\";","module.exports = __webpack_public_path__ + \"static/media/404-cat.3eba6875.png\";","import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass LoginBox extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {};\r\n    }\r\n  \r\n    submitLogin(e) {}\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"inner-container\">\r\n          <div className=\"box\">\r\n  \r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                className=\"login-input\"\r\n                placeholder=\"Username\"/>\r\n            </div>\r\n  \r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className=\"login-input\"\r\n                placeholder=\"Password\"/>\r\n            </div>\r\n   \r\n                <Link to=\"/new-crawl\"> \r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"login-btn\"\r\n                    onClick={this\r\n                    .submitLogin\r\n                    .bind(this)}>Login</button>\r\n                </Link>\r\n\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  } \r\n\r\n  export default LoginBox\r\n ","import React from \"react\"\r\nimport { Formik, Form, useField } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst MyCheckbox = ({ children, ...props }) => {\r\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\r\n  return (\r\n    <>\r\n      <label className=\"checkbox\">\r\n        <input {...field} {...props} type=\"checkbox\" />\r\n        {children}\r\n      </label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst MySelect = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <div htmlFor={props.id || props.name}>{label}</div>\r\n      <div {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div>{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nclass RegisterBox extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"ss\",\r\n      email: \"\",\r\n      acceptedTerms: false,\r\n      errors: {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n      }\r\n      \r\n    };\r\n    \r\n  }\r\n  \r\n  render() {\r\n    const {errors} = this.state;\r\n    return (\r\n        <div className=\"inner-container\">\r\n          \r\n          <div className=\"box\">\r\n\r\n          <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n          acceptedTerms: false, // added for our checkbox\r\n        }}\r\n        validationSchema={Yup.object({\r\n          password: Yup.string()\r\n            .max(30, \"Must be 30 characters or less\")\r\n            .required(\"Password required\")\r\n            .min(8, \"Minimum length 8\"),\r\n            confirmPassword: Yup.string()\r\n            .required(\"Password required\")\r\n            .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n          email: Yup.string()\r\n            .email(\"Invalid email address\")\r\n            .required(\"Email required\"),\r\n          acceptedTerms: Yup.boolean()\r\n            .required(\"Required\")\r\n            .oneOf([true], \"You must accept the terms and conditions\"),\r\n        })}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n          }, 400);\r\n        }}\r\n      >\r\n        <div className=\"scroll\">\r\n        <Form>\r\n        <div className=\"input-group\">\r\n        <MyTextInput\r\n            label=\"Email Address\"\r\n            type='email' \r\n            name='email' \r\n            className=\"login-input\" \r\n            placeholder=\"Email\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Password\"\r\n            type='password' \r\n            name='password' \r\n            className=\"login-input\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Confirm password\"\r\n            type='password' \r\n            name='confirmPassword' \r\n            className=\"login-input\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <MyCheckbox name=\"acceptedTerms\">\r\n            I accept the terms and conditions\r\n          </MyCheckbox>\r\n\r\n          <button className=\"login-btn\" type=\"submit\">Submit</button>\r\n          </div>\r\n        </Form>\r\n        </div>\r\n      </Formik>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default RegisterBox","import React from \"react\"\r\n\r\n\r\nimport LoginBox from \"./LoginBox\"\r\nimport RegisterBox from \"./RegisterBox\"\r\n\r\nclass LoginPanel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          isLoginOpen: true,\r\n          isRegisterOpen: false\r\n        };\r\n    }\r\n\r\n     showLoginBox() {\r\n        this.setState({isLoginOpen: true, isRegisterOpen: false});\r\n        }\r\n        \r\n     showRegisterBox() {\r\n        this.setState({isRegisterOpen: true, isLoginOpen: false});\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <div className=\"root-container\">\r\n                  <div className=\"box-controller\">\r\n                      <div\r\n                          className={\"controller \" + (this.state.isLoginOpen\r\n                          ? \"selected-controller\"\r\n                          : \"\")}\r\n                          onClick={this\r\n                          .showLoginBox\r\n                          .bind(this)}>\r\n                          Login\r\n                      </div>\r\n                      <div\r\n                          className={\"controller \" + (this.state.isRegisterOpen\r\n                          ? \"selected-controller\"\r\n                          : \"\")}\r\n                          onClick={this\r\n                          .showRegisterBox\r\n                          .bind(this)}>\r\n                          Register\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"box-container\">\r\n                  {this.state.isLoginOpen && <LoginBox />}\r\n                  {this.state.isRegisterOpen && <RegisterBox />}\r\n                  </div>\r\n              </div>\r\n            );\r\n        }\r\n      \r\n}\r\n\r\nexport default LoginPanel  ","import React from \"react\"\r\n\r\nimport logo from '../media/logo.png';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"AppHeader\">\r\n            <img src={logo} className=\"AppLogo\" alt=\"logo\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"Footer\">\r\n            <text className=\"Footer-text\">\r\n                Innovative Projects Summer - Wrocław 2020\r\n            </text>      \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\"\r\nimport LoginPanel from \"./LoginPanel\"\r\nimport Header from '../Header'\r\nimport Footer from '../Footer'\r\n\r\nfunction LoginMainContent() {\r\n    return (\r\n        <div>\r\n            <center>\r\n            <div className='background'>\r\n                <Header />\r\n                    <main className=\"MainContent\">\r\n                    <LoginPanel />\r\n                    </main>\r\n                <Footer />\r\n            </div>\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginMainContent","import React, {Component} from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\n//import FilledInput from '@material-ui/core/FilledInput';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n//import Input from '@material-ui/core/Input';\r\n//import InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\n//import { MContext, Consumer } from \"../Provider\";\r\n\r\n\r\nclass LinkInput extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      values: {\r\n        link: \"\",\r\n      },\r\n      parsedPageToExport: \"\",\r\n      isSubmitting: false,\r\n      isError: false\r\n    };\r\n  }\r\n\r\n\r\nsubmitForm = async e => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.setState({ isSubmitting: true });\r\n\r\n    //communication with backend\r\n    const url = {\r\n      url: this.state.values.link.toString()\r\n    };\r\n    const res = await fetch(\"/api/v1/page\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(url),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n    });\r\n\r\n\r\n    //////////////////////////////////////////////////////\r\n    //showing what frontend send to backend (to delete later)\r\n    // alert(JSON.stringify(this.state.values))\r\n    //////////////////////////////////////////////////////\r\n\r\n    this.setState({ isSubmitting: false });\r\n    let data = await res.json();\r\n    !data.hasOwnProperty(\"error\")\r\n      ? this.setState({ message: data.success })\r\n      : this.setState({ message: data.error, isError: true });\r\n    data = {\r\n      parsedPage: data.html\r\n    };\r\n    //////////////////////////////////////////////////////\r\n    //showing what backend returns to frontend (to delete later)\r\n    //alert(data.parsedPage);\r\n    //////////////////////////////////////////////////////\r\n\r\n\r\n// document.getElementById(\"d\").style.pointerEvents\r\n\r\n    var AddingScripts = `\r\n<script type='text/javascript'>\r\n\r\nwindow.onload=function() {\r\n  var anchors = document.getElementsByTagName('a');\r\n  for(var i=anchors.length-1;i>=0;i--){\r\n  anchors[i].onclick=function() { return false }\r\n  }}\r\n\r\n  \r\nvar outer = document.createElement(\"div\");\r\nouter.setAttribute(\"id\", \"outer\");\r\nouter.setAttribute(\"class\", \"outer\");\r\ndocument.body.appendChild(outer);\r\nouter.style.background = 'rgba(37, 172, 131, 0.2)';\r\nouter.style.position = 'absolute';\r\nouter.style.zIndex = 65000000;\r\n\r\n\r\nvar selector = document.createElement(\"div\");\r\nselector.setAttribute(\"id\", \"selector\");\r\ndocument.body.appendChild(selector);\r\nselector.style.borderStyle  = \"solid\";\r\nselector.style.borderWidth  = \"3px\";\r\nselector.style.borderColor  = \"blue\";\r\nselector.style.position = 'absolute';\r\nselector.style.zIndex = 65000000;\r\nselector.style.pointerEvents = \"none\";\r\nselector.style.transition = 'all 300ms ease';\r\n\r\n\r\n// var topSelector = document.createElement(\"div\");\r\n// topSelector.setAttribute(\"id\", \"selector-top\");\r\n// selector.appendChild(topSelector);\r\n// topSelector.style.background = 'blue';\r\n// topSelector.style.position = 'absolute';\r\n// topSelector.style.height = '3px';\r\n// topSelector.style.zIndex = 65000000;\r\n// topSelector.style.transition = 'all 300ms ease';\r\n\r\n\r\n// var leftSelector = document.createElement(\"div\");\r\n// leftSelector.setAttribute(\"id\", \"selector-left\");\r\n// selector.appendChild(leftSelector);\r\n// leftSelector.style.background = 'blue';\r\n// leftSelector.style.position = 'absolute';\r\n// leftSelector.style.width = '3px';\r\n// leftSelector.style.zIndex = 65000000;\r\n// leftSelector.style.transition = 'all 300ms ease';\r\n\r\n\r\n// var rightSelector = document.createElement(\"div\");\r\n// rightSelector.setAttribute(\"id\", \"selector-right\");\r\n// selector.appendChild(rightSelector);\r\n// rightSelector.style.background = 'blue';\r\n// rightSelector.style.position = 'absolute';\r\n// rightSelector.style.width = '3px';\r\n// rightSelector.style.zIndex = 65000000;\r\n// rightSelector.style.transition = 'all 300ms ease';\r\n\r\n\r\n// var bottomSelector = document.createElement(\"div\");\r\n// bottomSelector.setAttribute(\"id\", \"selector-bottom\");\r\n// selector.appendChild(bottomSelector);\r\n// bottomSelector.style.background = 'blue';\r\n// bottomSelector.style.position = 'absolute';\r\n// bottomSelector.style.height = '3px';\r\n// bottomSelector.style.zIndex = 65000000;\r\n// bottomSelector.style.transition = 'all 300ms ease';\r\n\r\n\r\n\r\nvar TurnOffBordering = 1;\r\n\r\nvar xpathIframe = 5;\r\n\r\nfunction drawBorder(e) {\r\n\r\n  if (TurnOffBordering == 0) {\r\n    return;\r\n  }\r\n\r\n\r\n  var target = e.target;\r\n\r\n  if (target.id === \"selector\" ) return;\r\n\r\n      selector.style.display = 'block';\r\n\r\n  var targetRect = target.getBoundingClientRect();\r\n\r\n  selector.style.display = \"block\";\r\n  selector.style.width = targetRect.width + \"px\";\r\n  selector.style.height = targetRect.height + \"px\";\r\n  selector.style.left = targetRect.left + \"px\";\r\n  selector.style.top = targetRect.top + window.scrollY + \"px\";\r\n\r\n\r\n  // topSelector.style.width = targetRect.width + \"px\";\r\n  // topSelector.style.left = targetRect.left + \"px\";\r\n  // topSelector.style.top = targetRect.top + window.scrollY + \"px\";\r\n\r\n  // bottomSelector.style.width = targetRect.width + \"px\";\r\n  // bottomSelector.style.left = targetRect.left + \"px\";\r\n  // bottomSelector.style.top = targetRect.top + targetRect.height - 3 + window.scrollY + \"px\";\r\n\r\n  // leftSelector.style.height = targetRect.height + \"px\";\r\n  // leftSelector.style.left = targetRect.left + \"px\";\r\n  // leftSelector.style.top = targetRect.top + window.scrollY + \"px\";\r\n\r\n  // rightSelector.style.height = targetRect.height + \"px\";\r\n  // rightSelector.style.left = targetRect.left + targetRect.width + \"px\";\r\n  // rightSelector.style.top = targetRect.top + window.scrollY + \"px\";\r\n}\r\n\r\nfunction UpdateBorders() {\r\n  selector.style.display = 'none';\r\n  outer.style.display = \"none\";\r\n}\r\n\r\nfunction removeHighlight(e) {\r\n  var target = e.target;\r\n  if (target && target.className === \"outer\") {\r\n    outer.style.display = \"none\";\r\n  }\r\n}\r\n\r\nfunction select(e) {\r\n  \r\n  if (TurnOffBordering == 0) {\r\n    return;\r\n  }\r\n\r\n  var target = e.target;\r\n\r\n  if (target.id == \"outer\" || \r\n  target.id == \"selector\") return;\r\n\r\n  getElementXPath(e);\r\n\r\n  var targetRect = target.getBoundingClientRect();\r\n\r\n  outer.style.display = \"block\";\r\n  outer.style.width = targetRect.width + \"px\";\r\n  outer.style.height = targetRect.height + \"px\";\r\n  outer.style.left = targetRect.left + \"px\";\r\n  outer.style.top = targetRect.top + window.scrollY + \"px\";\r\n\r\n  console.log(\"xpath: \"+ xpathIframe)\r\n}\r\n\r\nfunction getElementTreeXPath(element) {\r\n  var paths = [];\r\n  var target = element.target;\r\n\r\n  for (; target && target.nodeType === 1; target = target.parentNode) {\r\n    var index = 0;\r\n    // EXTRA TEST FOR target.ID\r\n    if (target && target.id) {\r\n      paths.splice(0, 0, '/*[@id=\"' + target.id + '\"]');\r\n      break;\r\n    }\r\n\r\n    for (var sibling = target.previousSibling; sibling; sibling = sibling.previousSibling) {\r\n      // Ignore document type declaration.\r\n      if (sibling.nodeType === Node.DOCUMENT_TYPE_NODE)\r\n        continue;\r\n\r\n      if (sibling.nodeName === target.nodeName)\r\n        ++index;\r\n\r\n    }\r\n\r\n    var tagName = target.nodeName.toLowerCase();\r\n    var pathIndex = (index ? \"[\" + (index + 1) + \"]\" : \"\");\r\n    paths.splice(0, 0, tagName + pathIndex);\r\n  }\r\n\r\n  xpathIframe = paths.length ? \"/\" + paths.join(\"/\") : null;\r\n  return paths.length ? \"/\" + paths.join(\"/\") : null;\r\n};\r\n\r\nfunction getElementXPath(element) {\r\n  var target = element.target;\r\n\r\n  if (target && target.id){\r\n    xpathIframe = '//*[@id=\"' + target.id + '\"]'\r\n    return '//*[@id=\"' + target.id + '\"]';\r\n  }\r\n  else\r\n    return getElementTreeXPath(element);\r\n};\r\n\r\n\r\n  window.addEventListener('click', removeHighlight);\r\n  window.addEventListener('mousemove', drawBorder);\r\n  window.addEventListener('click', select);\r\n\r\n\r\n</script>`\r\n\r\n \r\n\r\n    data.parsedPage = data.parsedPage + AddingScripts \r\n\r\n\r\n    // TUTAJ DODAŁEM TO \\/ - DAWID\r\n\r\n    // this.setState({title1: data.parsedPage})\r\n    // const element = document.createElement(\"a\");\r\n    // const file = new Blob([this.state.title1], {type: 'text/plain'});\r\n    // element.href = URL.createObjectURL(file);\r\n    // element.download = \"myFile.html\";\r\n    // document.body.appendChild(element); // Required for this to work in FireFox\r\n    // element.click();\r\n\r\n// TUTAJ DODAŁEM TO /\\- DAWID\r\n\r\n// this.setState({ title: getElementXPath(target) });\r\n\r\n\r\n\r\n//setting parsed code received from backend to the variable, which will be exported\r\nthis.setState({parsedPageToExport: data.parsedPage}) \r\n\r\n\r\n/* automatyczne przenoszenie - potrzebny fallback\r\n    const redirect = () => {\r\n      return(\r\n        <Link to={{\r\n          pathname: \"/new-crawl/start-crawling\",\r\n          state: {\r\n            externalPageToRender: this.state.parsedPageToExport,\r\n          }\r\n        }}>\r\n          {window.location.replace(\"./new-crawl/start-crawling\")}\r\n        </Link>\r\n      );\r\n    }  \r\n*/\r\n\r\n    setTimeout(\r\n      () => {\r\n        this.setState({\r\n          isError: false,\r\n          message: \"\",\r\n          values: {link: \"\" }\r\n        })\r\n        //redirect();\r\n      },\r\n      1000\r\n    );\r\n\r\n  };\r\n\r\n  handleInputChange = e =>\r\n    this.setState({\r\n      values: { ...this.state.values, [e.target.name]: e.target.value }\r\n    });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <div className=\"PageContent\">\r\n        <form onSubmit={this.submitForm}>\r\n            <h1>Paste your link below</h1>\r\n            <FormControl style={{ width: '40ch'}} variant=\"outlined\">\r\n              <input value={this.state.values.link} pattern=\"https?://.+\" hidden=\"true\"></input>\r\n              <OutlinedInput\r\n                type=\"text\"\r\n                name=\"link\"\r\n                id=\"linkInput\"\r\n                value={this.state.values.link}\r\n                onChange={this.handleInputChange}\r\n                style={{ marginBottom: '0px' }}  \r\n                required\r\n              />\r\n                <FormHelperText style={{ marginLeft: \"-25px\", width: '500px'}} id=\"helper-text\">\r\n                    Remember, that your link should start with \"http://\" or \"https://\".\r\n                </FormHelperText> \r\n\r\n            </FormControl>\r\n          \r\n            {/* alternative version\r\n            <TextField \r\n            style={{ width: '50ch' }} \r\n            id=\"filled-link\" \r\n            label=\"Your link\" \r\n            type=\"link\" \r\n            variant=\"filled\" \r\n            helperText='Remember, that your link should start with \"http://\" or \"https://\".'\r\n            value={this.state.values.link}\r\n            required/>\r\n            */}\r\n\r\n            {/* classic version\r\n            <label htmlFor=\"link\"><h1>Paste your link below</h1></label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"link\"\r\n              id=\"link\"\r\n              value={this.state.values.link}\r\n              onChange={this.handleInputChange}\r\n              title=\"http://yourlink.com or https://yourlink.com\"\r\n              pattern=\"https?://.+\"\r\n              required\r\n            />\r\n            <button type=\"submit\">Go to website</button>\r\n            */}\r\n\r\n            <div>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" id=\"linkSubmit\">STEP 1: Submit website</Button>\r\n            </div> \r\n      \r\n        </form>\r\n\r\n        <div className={`message ${this.state.isError && \"error\"}`}>\r\n          {this.state.isSubmitting ? \"Please wait...\" : this.state.message}\r\n        </div>\r\n\r\n        {/* temporary button until auto redirecting will work */}\r\n        <Link to={{\r\n          pathname: \"/new-crawl/start-crawling\",\r\n          state: {\r\n            externalPageToRender: this.state.parsedPageToExport,\r\n            link: this.state.values.link\r\n          }\r\n        }}>\r\n          <Button variant=\"contained\" color=\"primary\" disableElevation >STEP 2: Go to website</Button>\r\n        </Link>\r\n\r\n\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LinkInput\r\n\r\n/*\r\nconst sendMessage = () => <MContext.Consumer>{(context) => (context.setMessage(\"New Arrival\"))}</MContext.Consumer>    \r\nsendMessage();\r\n*/","import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\nimport \"../navbar.css\"\r\n\r\nconst colors = [\r\n  'blue',\r\n]\r\nclass ExampleMenu extends Component {\r\n  static propTypes = {\r\n    color: PropTypes.string,\r\n  }\r\n\r\n  state = { activeItem: 'New Crawl' }\r\n\r\n  moveToMyAccount() {\r\n    window.location.assign(\"./my-account\")\r\n  }\r\n  moveToNewCrawl() {\r\n    window.location.assign(\"./new-crawl\")\r\n  }\r\n  moveToMyCrawls() {\r\n    window.location.assign(\"./my-crawls\")\r\n  }\r\n  Logout() {\r\n    window.location.assign(\"./\")\r\n  }\r\n\r\n  render() {\r\n    const { color } = this.props\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <div className=\"navbar\">\r\n      <Menu color={color} widths={4} size=\"small\">\r\n        <Menu.Item\r\n          name='New Crawl'\r\n          active={activeItem === 'New Crawl'}\r\n          onClick={this.moveToNewCrawl}\r\n        />\r\n        <Menu.Item\r\n          name='My Crawls'\r\n          active={activeItem === 'My Crawls'}\r\n          onClick={this.moveToMyCrawls}\r\n        />\r\n        <Menu.Item\r\n          name='My Account'\r\n          active={activeItem === 'My Account'}\r\n          onClick={this.moveToMyAccount}\r\n        />\r\n        <Menu.Item\r\n          name='Logout'\r\n          active={activeItem === 'Logout'}\r\n          onClick={this.Logout}\r\n        />\r\n      </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst MenuExampleColoredMenus = () => {\r\n  const menus = colors.map((color) => <ExampleMenu color={color} key={color} />)\r\n\r\n  return <div>{menus}</div>\r\n}\r\n\r\nexport default MenuExampleColoredMenus\r\n\r\n/*\r\nimport React from \"react\"\r\n\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass LinkNavbar extends React.Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n              <center>\r\n              <ul className=\"nav\">\r\n                <li><Link to='/my-crawls'>My Crawls</Link></li>\r\n                <li><Link to='/new-crawl'><u>New Crawl</u></Link></li>\r\n                <li><Link to='/my-account'>My Account</Link></li>\r\n                <li><a href=\"/\">Logout</a></li>\r\n              </ul>\r\n              </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LinkNavbar\r\n*/","import React from \"react\"\r\nimport LinkInput from './LinkInput'\r\nimport Navbar from './LinkNavbar'\r\nimport Header from '../../Header'\r\nimport Footer from '../../Footer'\r\n\r\n\r\n\r\nfunction LinkContent() {\r\n    return (\r\n        <div>\r\n            <center>\r\n            <div className='background'>\r\n                <Header />\r\n                    <main className=\"MainContent\">\r\n                    <LinkInput />\r\n                    <Navbar />\r\n                    </main>\r\n                <Footer />\r\n            </div>\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LinkContent","import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\nimport \"../navbar.css\"\r\n\r\nconst colors = [\r\n  'blue',\r\n]\r\nclass ExampleMenu extends Component {\r\n  static propTypes = {\r\n    color: PropTypes.string,\r\n  }\r\n\r\n  state = { activeItem: 'My Account' }\r\n\r\n  moveToMyAccount() {\r\n    window.location.assign(\"./my-account\")\r\n  }\r\n  moveToNewCrawl() {\r\n    window.location.assign(\"./new-crawl\")\r\n  }\r\n  moveToMyCrawls() {\r\n    window.location.assign(\"./my-crawls\")\r\n  }\r\n  Logout() {\r\n    window.location.assign(\"./\")\r\n  }\r\n\r\n  render() {\r\n    const { color } = this.props\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <div className=\"navbar\">\r\n      <Menu color={color} widths={4} size=\"small\">\r\n        <Menu.Item\r\n          name='New Crawl'\r\n          active={activeItem === 'New Crawl'}\r\n          onClick={this.moveToNewCrawl}\r\n        />\r\n        <Menu.Item\r\n          name='My Crawls'\r\n          active={activeItem === 'My Crawls'}\r\n          onClick={this.moveToMyCrawls}\r\n        />\r\n        <Menu.Item\r\n          name='My Account'\r\n          active={activeItem === 'My Account'}\r\n          onClick={this.moveToMyAccount}\r\n        />\r\n        <Menu.Item\r\n          name='Logout'\r\n          active={activeItem === 'Logout'}\r\n          onClick={this.Logout}\r\n        />\r\n      </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst MenuExampleColoredMenus = () => {\r\n  const menus = colors.map((color) => <ExampleMenu color={color} key={color} />)\r\n\r\n  return <div>{menus}</div>\r\n}\r\n\r\nexport default MenuExampleColoredMenus\r\n\r\n/*\r\nimport React from \"react\"\r\n\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass LinkNavbar extends React.Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n              <center>\r\n              <ul className=\"nav\">\r\n                <li><Link to='/my-crawls'>My Crawls</Link></li>\r\n                <li><Link to='/new-crawl'><u>New Crawl</u></Link></li>\r\n                <li><Link to='/my-account'>My Account</Link></li>\r\n                <li><a href=\"/\">Logout</a></li>\r\n              </ul>\r\n              </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LinkNavbar\r\n*/","import React from \"react\"\r\n\r\nfunction MyAccount() {\r\n    return (\r\n        <div className=\"PageContent\">\r\n            \r\n        </div>\r\n)\r\n}\r\n\r\nexport default MyAccount","import React from \"react\"\r\nimport Navbar from './MyAccountNavbar.js'\r\nimport Header from '../../Header'\r\nimport Footer from '../../Footer'\r\nimport MyAccount from \"./MyAccount.js\"\r\n\r\nfunction LinkMainContent() {\r\n    return (\r\n        <div>\r\n        <center>\r\n        <div className='background'>\r\n            <Header />\r\n                <main className=\"MainContent\">\r\n                    <MyAccount />\r\n                    <Navbar />\r\n                </main>\r\n            <Footer />\r\n        </div>\r\n        </center>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default LinkMainContent","import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\nimport \"../navbar.css\"\r\n\r\nconst colors = [\r\n  'blue',\r\n]\r\nclass ExampleMenu extends Component {\r\n  static propTypes = {\r\n    color: PropTypes.string,\r\n  }\r\n\r\n  state = { activeItem: 'My Crawls' }\r\n\r\n  moveToMyAccount() {\r\n    window.location.assign(\"./my-account\")\r\n  }\r\n  moveToNewCrawl() {\r\n    window.location.assign(\"./new-crawl\")\r\n  }\r\n  moveToMyCrawls() {\r\n    window.location.assign(\"./my-crawls\")\r\n  }\r\n  Logout() {\r\n    window.location.assign(\"./\")\r\n  }\r\n\r\n  render() {\r\n    const { color } = this.props\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <div className=\"navbar\">\r\n      <Menu color={color} widths={4} size=\"small\">\r\n        <Menu.Item\r\n          name='New Crawl'\r\n          active={activeItem === 'New Crawl'}\r\n          onClick={this.moveToNewCrawl}\r\n        />\r\n        <Menu.Item\r\n          name='My Crawls'\r\n          active={activeItem === 'My Crawls'}\r\n          onClick={this.moveToMyCrawls}\r\n        />\r\n        <Menu.Item\r\n          name='My Account'\r\n          active={activeItem === 'My Account'}\r\n          onClick={this.moveToMyAccount}\r\n        />\r\n        <Menu.Item\r\n          name='Logout'\r\n          active={activeItem === 'Logout'}\r\n          onClick={this.Logout}\r\n        />\r\n      </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst MenuExampleColoredMenus = () => {\r\n  const menus = colors.map((color) => <ExampleMenu color={color} key={color} />)\r\n\r\n  return <div>{menus}</div>\r\n}\r\n\r\nexport default MenuExampleColoredMenus\r\n\r\n/*\r\nimport React from \"react\"\r\n\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass LinkNavbar extends React.Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n              <center>\r\n              <ul className=\"nav\">\r\n                <li><Link to='/my-crawls'>My Crawls</Link></li>\r\n                <li><Link to='/new-crawl'><u>New Crawl</u></Link></li>\r\n                <li><Link to='/my-account'>My Account</Link></li>\r\n                <li><a href=\"/\">Logout</a></li>\r\n              </ul>\r\n              </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LinkNavbar\r\n*/","import React from \"react\"\r\n\r\nfunction MyCrawls() {\r\n    return (\r\n        <div className=\"PageContent\">\r\n            \r\n        </div>\r\n)\r\n}\r\n\r\nexport default MyCrawls","import React from \"react\"\r\nimport Navbar from './MyCrawlsNavbar.js'\r\nimport Header from '../../Header'\r\nimport Footer from '../../Footer'\r\nimport MyCrawls from \"./MyCrawls.js\"\r\n\r\nfunction MyCrawlsMainContent() {\r\n    return (\r\n        <div>\r\n        <center>\r\n        <div className='background'>\r\n            <Header />\r\n                <main className=\"MainContent\">\r\n                    <MyCrawls />\r\n                    <Navbar />\r\n                </main>\r\n            <Footer />\r\n        </div>\r\n        </center>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default MyCrawlsMainContent","import React from 'react';\r\nimport logo from './logo.png'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport TextField from '@material-ui/core/TextField';\r\n//import { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n//import FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {useLocation} from \"react-router-dom\"\r\n\r\nconst takeLink =  useLocation();\r\nclass TopBanner extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      values: {\r\n        email: \"\",\r\n        period: \"\",\r\n        xpath: \"\",\r\n        link: takeLink.state.link,\r\n        value: \"test\"\r\n      },\r\n      isSubmitting: false,\r\n      isError: false\r\n    };\r\n  }\r\n\r\n\r\n\r\n  sendState = () => {\r\n    if (this.props.borderState)\r\n    this.props.Callback(0);\r\n    else \r\n    this.props.Callback(1);\r\n  }\r\n\r\n\r\n\r\n  handleInputChange = e =>\r\n    this.setState({\r\n      values: { ...this.state.values, [e.target.name]: e.target.value }\r\n    });\r\n\r\n\r\n\r\n  submitForm = async e => {\r\n    e.preventDefault();\r\n    var x = this.props.xpathFromParent();\r\n    console.log(\"Wysyłany xpath: \"+ x);\r\n    this.setState({ xpath: x });\r\n    this.setState({\r\n      values: { ...this.state.values, xpath: x }})\r\n    this.setState({ isSubmitting: true });\r\n    console.log(JSON.stringify(this.state.values))\r\n\r\n    //communication with backend\r\n    const res = await fetch(\"/api/v1/crawling-data\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(this.state.values),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n    });\r\n\r\n//////////////\r\n    alert(JSON.stringify(this.state.values))\r\n//////////////\r\n    console.log(JSON.stringify(this.state.values))\r\n\r\n    this.setState({ isSubmitting: false });\r\n\r\n    const data = await res.json();\r\n    !data.hasOwnProperty(\"error\")\r\n      ? this.setState({ message: data.success })\r\n      : this.setState({ message: data.error, isError: true });\r\n\r\n    setTimeout(\r\n      () => {\r\n        this.setState({\r\n          isError: false,\r\n        })\r\n      },\r\n      1600\r\n    );\r\n\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div id='CrawlingBanner' >\r\n          \r\n      <div className='Logo'>\r\n        <div className ='elements'>\r\n          <img src={logo} alt=\"logo\" height=\"40\" width=\"167\" />\r\n        </div>\r\n      </div>\r\n      \r\n      \r\n      <div className='Status'>\r\n        <div className ='elements'>\r\n          <text className=\"textLeft\">Recording is</text><text className=\"textRight\"> ON</text>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className='Bordering'>\r\n        <div className='elements'>\r\n        Bordering\r\n        <br></br>\r\n        <div className=\"toggle-switch\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle-switch-checkbox\"\r\n          name=\"toggleSwitch\"\r\n          id=\"toggleSwitch\"\r\n          onChange={this.sendState}\r\n          defaultChecked\r\n        />\r\n        <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitch\">\r\n          <span className=\"toggle-switch-inner\" />\r\n          <span className=\"toggle-switch-switch\" />\r\n        </label>\r\n      </div>\r\n      </div>\r\n      </div>\r\n\r\n\r\n\r\n<form onSubmit={this.submitForm}>\r\n\r\n      <div className='EmailInput'>\r\n        <div className ='elements'>\r\n        <FormControl id=\"crawlingForm\" style={{ width:'30ch', paddingTop:'8px'}} onSubmit={this.submitForm} >\r\n\r\n          <TextField \r\n            size=\"small\"\r\n            id=\"filled-email\" \r\n            label=\"E-mail\" \r\n            type=\"text\" \r\n            name=\"email\"\r\n            variant=\"filled\" \r\n            onChange={this.handleInputChange}\r\n            value={this.state.values.email}\r\n            required\r\n          />\r\n        </FormControl>  \r\n        </div>\r\n      </div>\r\n\r\n      <div className='NotificationFreq'>\r\n        <div className ='elements'>\r\n        <FormControl variant=\"filled\" id=\"crawlingForm\" style={{ width: '25ch', paddingTop:'8px'}} size=\"small\">\r\n          <InputLabel id=\"simple-select-outlined-label\" style={{  paddingTop:'8px' }}>Notification frequency</InputLabel>\r\n   \r\n            <Select\r\n              labelId=\"simple-select-outlined-label\"\r\n              id=\"simple-select-outlined\"\r\n              name=\"period\"\r\n              value={this.state.values.period}\r\n              onChange={this.handleInputChange}\r\n              label=\"period\"\r\n              required\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>Choose one...</em>\r\n              </MenuItem>\r\n              <MenuItem value={1/360}>10sec</MenuItem>\r\n              <MenuItem value={1/60}>1min</MenuItem>\r\n              <MenuItem value={1/6}>10min</MenuItem>\r\n              <MenuItem value={0.5}>0.5h</MenuItem>\r\n              <MenuItem value={1}>1h</MenuItem>\r\n              <MenuItem value={6}>6h</MenuItem>\r\n              <MenuItem value={12}>12h</MenuItem>\r\n              <MenuItem value={24}>24h</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='SubmitButton'>\r\n        <div className ='elements'>\r\n          <FormControl id=\"crawlingForm\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<CloudUploadIcon />}\r\n              type=\"submit\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </FormControl>\r\n        </div>\r\n      </div>\r\n      \r\n</form>  \r\n\r\n\r\n      {/*\r\n      <div className='xPaths'>\r\n        <div className ='elements'>\r\n          <text id=\"status\">Wait for it... or enable JavaScript.</text>\r\n          <br /><text id=\"status2\">Wait for it... or enable JavaScript.</text>\r\n        </div>\r\n      </div>\r\n      */}\r\n\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TopBanner","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n//rendering external html\r\nfunction ExternalHtml() {\r\n\r\n  const takeExternalPageToRender =  useLocation();\r\n\r\n  return (\r\n    <div>\r\n      <iframe\r\n        id=\"pageFrame\"\r\n        name=\"pageFrame\"\r\n        src={takeExternalPageToRender.state.externalPageToRender}\r\n        srcDoc={takeExternalPageToRender.state.externalPageToRender}\r\n        allow=\"fullscreen\"\r\n        importance=\"high\"\r\n        referrerPolicy=\"unsafe-url\"\r\n        sandbox=\"allow-popups allow-scripts allow-same-origin\"\r\n        frameBorder=\"100\"\r\n      />\r\n\r\n      {/* <div dangerouslySetInnerHTML={{ __html: takeExternalPageToRender.state.externalPageToRender }} /> */}\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default ExternalHtml;\r\n\r\n/*\r\noryginalne:\r\n\r\nimport React, { Component } from 'react';\r\n\r\nconst API = 'https://hn.algolia.com/api/v1/search?query=';\r\nconst DEFAULT_QUERY = 'redux';\r\n\r\nclass ExternalHtml extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hits: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(API + DEFAULT_QUERY)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ hits: data.hits }));\r\n  }\r\n\r\n  render() {\r\n    const { hits } = this.state;\r\n    return (\r\n      <ul>\r\n        {hits.map(hit =>\r\n          <li key={hit.objectID}>\r\n            <a href={hit.url}>{hit.title}</a>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n}\r\nexport default ExternalHtml;\r\n\r\n*/","import React from 'react';\r\nimport $ from 'jquery';\r\nimport TopBanner from './TopBanner';\r\nimport ExternalHtml from './ExternalHtml';\r\nimport './Crawling.css';\r\n\r\n\r\n\r\n// function changeFrame(toggle)\r\n// {\r\n//   var x = toggle\r\n//   alert(x)\r\n//   var oIframe = document.getElementById('pageFrame');\r\n//   var oDoc = (oIframe.contentWindow || oIframe.contentDocument);\r\n//   if (oDoc.document) oDoc = oDoc.document;\r\n//   oDoc.TurnOffBordering2 = toggle;\r\n  \r\n//   return true;\r\n// }\r\n\r\n\r\n\r\nvar getElementTreeXPath = function (element) {\r\n  var paths = [];\r\n\r\n  // Use nodeName (instead of localName) so namespace prefix is included (if any).\r\n  for (; element && element.nodeType === 1; element = element.parentNode) {\r\n    var index = 0;\r\n    // EXTRA TEST FOR ELEMENT.ID\r\n    if (element && element.id) {\r\n      paths.splice(0, 0, '/*[@id=\"' + element.id + '\"]');\r\n      break;\r\n    }\r\n\r\n    for (var sibling = element.previousSibling; sibling; sibling = sibling.previousSibling) {\r\n      // Ignore document type declaration.\r\n      if (sibling.nodeType === Node.DOCUMENT_TYPE_NODE)\r\n        continue;\r\n\r\n      if (sibling.nodeName === element.nodeName)\r\n        ++index;\r\n    }\r\n\r\n    var tagName = element.nodeName.toLowerCase();\r\n    var pathIndex = (index ? \"[\" + (index + 1) + \"]\" : \"\");\r\n    paths.splice(0, 0, tagName + pathIndex);\r\n  }\r\n\r\n  return paths.length ? \"/\" + paths.join(\"/\") : null;\r\n};\r\n\r\nvar getElementXPath = function (element) {\r\n  if (element && element.id)\r\n    return '//*[@id=\"' + element.id + '\"]';\r\n  else\r\n    return getElementTreeXPath(element);\r\n};\r\n\r\n\r\n// TO MOŻNA POTEM USUNĄĆ \\/\r\n//Wyświetlanie xPath\r\nvar currentElement = null;\r\ndocument.addEventListener('mouseover', function (e) {\r\n  currentElement = e.target;\r\n});\r\n\r\nsetInterval(function () {\r\n  $('#status').text('The current element is: ' + (getElementXPath(currentElement)) + '.');\r\n}, 1);\r\n// TO MOŻNA POTEM USUNĄĆ /\\\r\n\r\n\r\n\r\nfunction HelpElements() {\r\n  return (\r\n    <div>\r\n      <div id='empty'></div>\r\n      <div id='outer' class='outer'></div>\r\n      <div id=\"selector\">\r\n        <div id=\"selector-top\"></div>\r\n        <div id=\"selector-left\"></div>\r\n        <div id=\"selector-right\"></div>\r\n        <div id=\"selector-bottom\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nclass Crawling extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"Click here\",\r\n      xpath: \"\"\r\n    };\r\n    this.state = { borderState: 0 };\r\n\r\n    // this.select = this.select.bind(this);\r\n    // // this.handleLoad = this.handleLoad.bind(this);\r\n    // this.drawBorder = this.drawBorder.bind(this);\r\n    // // this.deleteBorder = this.deleteBorder.bind(this);\r\n    // this.TakeXpath = this.TakeXpath.bind(this);\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener('click', this.removeHighlight);\r\n  //   document.getElementById(\"Content\").addEventListener('mousemove', this.drawBorder);\r\n  //   document.getElementById(\"CrawlingBanner\").addEventListener('mousemove', this.deleteBorder);\r\n  //   window.addEventListener('scroll', this.deleteBorder);\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //   window.removeEventListener('click', this.removeHighlight);\r\n  //   document.getElementById(\"Content\").removeEventListener('mousemove', this.drawBorder);\r\n  //   document.getElementById(\"CrawlingBanner\").removeEventListener('mousemove', this.deleteBorder);\r\n  //   window.removeEventListener('scroll', this.deleteBorder);\r\n  // }\r\n\r\n  // deleteBorder() {\r\n  //   document.getElementById(\"selector\").style.display = 'none';\r\n  // }\r\n\r\n  // drawBorder(e) {\r\n\r\n  //   if (this.state.borderState == 0) {\r\n  //     return;\r\n  //   }\r\n\r\n  //   var target = e.target;\r\n\r\n  //   if (target.id === \"selector-top\" ||\r\n  //     target.id === \"selector-bottom\" ||\r\n  //     target.id === \"selector-left\" ||\r\n  //     target.id === \"selector-right\") return;\r\n\r\n  //   document.getElementById(\"selector\").style.display = 'block';\r\n\r\n  //   var targetRect = target.getBoundingClientRect();\r\n\r\n  //   var top = document.getElementById(\"selector-top\").style;\r\n  //   top.width = targetRect.width + \"px\";\r\n  //   top.left = targetRect.left + \"px\";\r\n  //   top.top = targetRect.top + \"px\";\r\n\r\n  //   var bot = document.getElementById(\"selector-bottom\").style;\r\n  //   bot.width = targetRect.width + \"px\";\r\n  //   bot.left = targetRect.left + \"px\";\r\n  //   bot.top = targetRect.top + targetRect.height - 3 + \"px\";\r\n\r\n  //   var left = document.getElementById(\"selector-left\").style;\r\n  //   left.height = targetRect.height + \"px\";\r\n  //   left.left = targetRect.left + \"px\";\r\n  //   left.top = targetRect.top + \"px\";\r\n\r\n  //   var right = document.getElementById(\"selector-right\").style;\r\n  //   right.height = targetRect.height + \"px\";\r\n  //   right.left = targetRect.left + targetRect.width + \"px\";\r\n  //   right.top = targetRect.top + \"px\";\r\n  // }\r\n\r\n  // removeHighlight(e) {\r\n  //   var target = e.target;\r\n  //   if (target && target.className === \"outer\") {\r\n  //     document.getElementById(\"outer\").style.display = \"none\";\r\n  //   }\r\n  // }\r\n\r\n  // select = (e) => {\r\n\r\n  //   var target = e.target;\r\n  //   this.setState({ title: getElementXPath(target) });\r\n  //   var targetRect = target.getBoundingClientRect();\r\n  //   var outer = document.getElementById(\"outer\").style;\r\n  //   outer.display = \"block\";\r\n  //   outer.width = targetRect.width + \"px\";\r\n  //   outer.height = targetRect.height + \"px\";\r\n  //   outer.left = targetRect.left + \"px\";\r\n  //   outer.top = targetRect.top + window.scrollY + \"px\";\r\n\r\n\r\n  //   /* old\r\n  //   var target = e.target;\r\n  //   this.setState({ title: getElementXPath(target) });\r\n  //   var outer = document.getElementById(\"outer\").style\r\n  //   outer.display = \"block\";\r\n  //   outer.width = target.offsetWidth +\"px\";\r\n  //   outer.height = target.offsetHeight +\"px\";\r\n  //   outer.left = target.offsetLeft +\"px\";\r\n  //   outer.top = target.offsetTop +\"px\";\r\n  //   */\r\n  // };\r\n\r\n  callbackFunction = (borderSwitchState) => {\r\n    this.setState({ borderState: borderSwitchState });\r\n    console.log(this.state.borderState)\r\n    document.getElementById(\"pageFrame\").contentWindow.TurnOffBordering = this.state.borderState;\r\n    document.getElementById(\"pageFrame\").contentWindow.UpdateBorders();\r\n  };\r\n\r\n  TakeXpath (){\r\n    let takeXpath = document.getElementById(\"pageFrame\").contentWindow.xpathIframe;\r\n    return takeXpath\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TopBanner Callback={this.callbackFunction} borderState={this.state.borderState} xpathFromParent={this.TakeXpath} />\r\n        <HelpElements />\r\n\r\n        {/* <div id='Content' onClick={this.select}>{this.state.title} */}\r\n        <div id='Content'>\r\n        {/* <button onClick={this.TakeXpath}>Check xPath!</button> */}\r\n\r\n          {/* rendering page to crawl */}\r\n\r\n          <ExternalHtml />\r\n\r\n          {/*this.state.borderState*/}\r\n\r\n\r\n\r\n\r\n          {/* tymczasowa strona do testowania */}\r\n\r\n{/* \r\n          <h2 id='aaaaasdasdasdasd'>testowy element</h2>\r\n\r\n          <h4>element dddh4</h4>\r\n          <h1>Welcome</h1>\r\n          <button class=\"n\">Click me</button>\r\n\r\n          <button onClick={() => alert('Kliknięto!')}>Kliknij!</button>\r\n\r\n          <div>Witaj, </div>\r\n\r\n\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n          Explicabo voluptates doloremque quisquam omnis rem fuga\r\n          veritatis odit! Perferendis cupiditate corporis consequuntur\r\namet ducimus quam       <button class=\"n\">Click me1</button>\r\nat magni facilis debitis ut quisquam molestias\r\nmaxime voluptatibus voluptatum    <div>     sadasdsasadasdsa <button class=\"n\">Click me2</button>\r\n            </div>  <button class=\"n\">Click me3</button>\r\n\r\n  adipisci perspiciatis voluptatibus et vero nisi!</p>\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Numquam voluptatem a\r\n          architecto nihil ullam. Non dolores optio ea dolorem accusantium a delectus\r\n          molestias quam nulla fugit voluptas iste ipsum! Molestias id quaerat praesentium\r\nstiae\r\n  adipisci perspiciatis voluptatibus et vero nisi!</p>\r\n\r\n          nemo soluta voluptas molestias similique ex. Praesentium sequi natus molestiae\r\n  adipisci perspiciatis voluptatibus et vero nisi!</p> */}\r\n\r\n  {/* koniec tymczasowej strony do testowania */}\r\n\r\n        </div>\r\n      </div>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Crawling;","import React from \"react\"\r\nimport Header from '../Header'\r\nimport Footer from '../Footer'\r\nimport error from '../../media/404-cat.png'\r\n\r\nimport {BrowserRouter as Router, Switch, Link} from \"react-router-dom\";\r\n\r\nfunction MyCrawlsMainContent() {\r\n    return (\r\n        <div>\r\n        <center>\r\n        <div className='background'>\r\n            <Header />\r\n                <main className=\"MainContent\">\r\n                <div className=\"PageContent\">\r\n                    <h2>I'm really sorry, but this page doesn't exist</h2>\r\n                    <img src={error} height=\"170px\" width=\"150px\" alt=\"how dare you?\" />\r\n                    <h4>Go back to the right path by clicking button below...</h4>\r\n                    <Router forceRefresh={true}><Switch><Link to=\"/\"><button>Cats are better than dogs!</button></Link></Switch></Router>\r\n                 </div>\r\n                </main>\r\n            <Footer />\r\n        </div>\r\n        </center>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default MyCrawlsMainContent","import React from 'react';\r\nimport './App.css';\r\n\r\nimport LoginMainContent from \"./components/LoginPage/LoginMainContent\"\r\nimport LinkMainContent from './components/ContentPages/LinkPage/LinkMainContent';\r\nimport MyAccountMainContent from './components/ContentPages/MyAccountPage/MyAccountMainContent';\r\nimport MyCrawlsMainContent from './components/ContentPages/MyCrawlsPage/MyCrawlsMainContent';\r\nimport Crawling from './components/ContentPages/CrawlingPage/Crawling';\r\nimport NotFoundPage from './components/ContentPages/NotFoundPage';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <body>\r\n          {/* \r\n          A <Switch> looks through its children <Route>s and\r\n          renders the first one that matches the current URL. \r\n          */}\r\n          <Router>\r\n            <Switch>\r\n              <Route exact strict path=\"/\" component={LoginMainContent} />  \r\n              <Route exact strict path=\"/new-crawl\" component={LinkMainContent} />\r\n              <Route path=\"/new-crawl/start-crawling\" component={Crawling} />\r\n              <Route exact strict path=\"/my-account\" component={MyAccountMainContent} />\r\n              <Route exact strict path=\"/my-crawls\" component={MyCrawlsMainContent} />\r\n              <Route exact strict path=\"/404\" component={NotFoundPage} />\r\n              <Redirect to=\"/404\" />\r\n            </Switch>\r\n          </Router> \r\n      </body>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}